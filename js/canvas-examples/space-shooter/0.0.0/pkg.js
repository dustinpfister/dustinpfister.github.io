/*
   canvas-example-space-shooter
   Copyright 2020 by Dustin Pfister
   https://raw.githubusercontent.com/dustinpfister/canvas-examples/master/LICENSE
 
   https://github.com/dustinpfister/canvas-examples
*/
var utils={};utils.distance=function(x1,y1,x2,y2){return Math.sqrt(Math.pow(x1-x2,2)+Math.pow(y1-y2,2))};utils.mod=function(x,m){return(x%m+m)%m};utils.createCanvas=function(opt){opt=opt||{};opt.container=opt.container||document.getElementById("canvas-app")||document.body;opt.canvas=document.createElement("canvas");opt.ctx=opt.canvas.getContext("2d");opt.canvas.className="canvas_example";opt.canvas.width=opt.width===undefined?320:opt.width;opt.canvas.height=opt.height===undefined?240:opt.height;opt.ctx.translate(.5,.5);opt.canvas.onselectstart=function(){return false};opt.canvas.style.imageRendering="pixelated";opt.ctx.imageSmoothingEnabled=false;opt.container.appendChild(opt.canvas);return opt};utils.getCanvasRelative=function(e){var canvas=e.target,bx=canvas.getBoundingClientRect(),pos={x:(e.changedTouches?e.changedTouches[0].clientX:e.clientX)-bx.left,y:(e.changedTouches?e.changedTouches[0].clientY:e.clientY)-bx.top,bx:bx};pos.x=Math.floor(pos.x/canvas.scrollWidth*canvas.width);pos.y=Math.floor(pos.y/canvas.scrollHeight*canvas.height);e.preventDefault();return pos};var Disp=function(opt){opt=opt||{};this.x=opt.x===undefined?0:opt.x;this.y=opt.y===undefined?0:opt.y;this.w=opt.w===undefined?16:opt.w;this.h=opt.h===undefined?16:opt.h;this.heading=opt.heading===undefined?0:opt.heading;this.pps=opt.pps===undefined?0:opt.pps;this.canvas=opt.canvas||document.createElement("canvas");this.ctx=this.canvas.getContext("2d")};Disp.prototype.update=function(t){t=t===undefined?0:t;this.moveObj(t);this.applyBounds(this,this.canvas)};Disp.prototype.draw=function(){var ctx=this.ctx,hw=this.w/2,hh=this.h/2;ctx.save();ctx.translate(this.x,this.y);ctx.rotate(this.heading);ctx.strokeRect(-hw,-hh,this.w,this.h);ctx.restore()};Disp.prototype.applyBounds=function(){var canvas=this.canvas;if(this.x<-this.w){this.x=canvas.width+this.w-Math.abs(this.x)%(canvas.width+this.w)}if(this.x>canvas.width+this.w){this.x=this.x%(canvas.width+this.w)}if(this.y<-this.h){this.y=canvas.height+this.h-Math.abs(this.y)%(canvas.height+this.h)}if(this.y>canvas.height+this.h){this.y=this.y%(canvas.height+this.h)}};Disp.prototype.moveObj=function(t){var s=t/1e3;var delta=this.pps*s;this.x+=Math.cos(this.heading)*delta;this.y+=Math.sin(this.heading)*delta};Disp.prototype.distance=function(disp2){return utils.distance(this.x,this.y,disp2.x,disp2.y)};var Shot=function(opt){opt=opt||{};Object.assign(this,new Disp(opt));this.life=opt.life||1e3;this.damage=opt.damage===undefined?1:opt.damage};Shot.prototype=new Disp;var Ship=function(opt){opt=opt||{};Object.assign(this,new Disp(opt));this.shotMax=opt.shotMax===undefined?5:opt.shotMax;this.shotLife=opt.shotLife===undefined?1500:opt.shotLife;this.shotDelay=opt.shotDelay===undefined?350:opt.shotDelay;this.shotPPS=opt.shotPPS===undefined?128:opt.shotPPS;this.shotDamage=opt.shotDamage===undefined?1:opt.shotDamage;this.maxHP=opt.maxHP===undefined?10:opt.maxHP;this.shots=[];this.shotTime=0;this.HP=this.maxHP};Ship.prototype=new Disp;Ship.prototype.update=function(t,shipPool){Disp.prototype.update.call(this,t);this.updateShots(t,shipPool)};Ship.prototype.hit=function(shot){this.HP-=shot.damage;this.HP=this.HP<0?0:this.HP};Ship.prototype.updateShots=function(t,shipPool){var s=t/1e3,ship=this;this.shotTime+=t;var newShots=this.shotTime/this.shotDelay;if(newShots>=1){this.shotTime=this.shotTime%this.shotDelay;if(this.shots.length<this.shotMax){this.shots.push(new Shot({canvas:this.canvas,x:this.x,y:this.y,heading:this.heading,pps:this.shotPPS,life:this.shotLife,damage:1}))}}this.shots.forEach(function(shot){shot.moveObj(t);shot.life-=t;shot.applyBounds();if(shipPool){shipPool.forEach(function(ship){if(ship.distance(shot)<=ship.w){ship.hit(shot);shot.life=0}})}});var i=this.shots.length;while(i--){var shot=this.shots[i];if(shot.life<=0){this.shots.splice(i,1)}}};Ship.prototype.draw=function(ctx,shipStyle,shotStyle){var hw=this.w/2,hh=this.h/2;ctx.save();ctx.translate(this.x,this.y);ctx.rotate(this.heading);ctx.beginPath();ctx.moveTo(16,0);ctx.lineTo(-8,8);ctx.lineTo(-8,-8);ctx.closePath();ctx.strokeStyle=shipStyle||"white";ctx.stroke();ctx.restore();ctx.fillStyle=shotStyle||"white";this.shots.forEach(function(shot){ctx.fillRect(shot.x-2,shot.y-2,4,4)})};var States=function(){var lt=new Date,canvasObj=utils.createCanvas({width:320,height:240}),canvas=canvasObj.canvas,ctx=canvasObj.ctx;var makeEnemies=function(level,canvas){var e,enemies=[];var cap=level/30;cap=cap>1?1:cap;var count=level;while(count--){e=new Ship({canvas:canvas,x:Math.floor(canvas.width*Math.random()),y:Math.floor(canvas.height*Math.random()),pps:16+Math.floor(64*cap),shotPPS:64+Math.floor(128*cap),shotLife:5e3,heading:Math.PI*2*Math.random(),shotDelay:3e3-Math.floor(2500*cap),maxHP:1+Math.floor(15*cap)});enemies.push(e)}return enemies};var purgeEnemies=function(enemies){var i=enemies.length;while(i--){var enemy=enemies[i];if(enemy.HP===0){enemies.splice(i,1)}}};var setupLevel=function(api){api.disp.enemies=makeEnemies(api.level,api.canvas);var ship=api.disp.ship;ship.x=canvas.width/2;ship.y=canvas.width/2;api.win=false;api.reset=false};return{ver:"0.0.0",canvas:canvas,ctx:ctx,win:false,reset:false,level:1,disp:{},current:"init",init:function(){this.disp.ship=new Ship({canvas:canvas,x:0,y:0,pps:32,heading:Math.PI/180*0});this.level=1;setupLevel(this);this.current="game"},game:function(){var now=new Date,t=now-lt,ship=this.disp.ship,enemies=this.disp.enemies;ship.update(t,enemies);enemies.forEach(function(enemy){enemy.update(t,[ship])});purgeEnemies(enemies);if(enemies.length===0){this.win=true;this.current="gameOver"}if(ship.HP===0){this.current="gameOver"}lt=now},gameOver:function(){if(this.reset){if(this.win){this.level+=1;setupLevel(this);this.current="game"}else{this.current="init"}}},tick:function(){this[this.current]()}}}();(function(){var canvas=States.canvas;var moveShip=function(e){var cx=canvas.width/2,cy=canvas.height/2,pos=utils.getCanvasRelative(e);States.disp.ship.heading=Math.PI+Math.atan2(cy-pos.y,cx-pos.x)};var startGame=function(){if(States.current==="gameOver"){States.reset=true}};canvas.addEventListener("mousemove",moveShip);canvas.addEventListener("touchmove",moveShip);canvas.addEventListener("mousedown",startGame);canvas.addEventListener("touchstart",startGame)})();var draw=function(){var canvas=States.canvas,ctx=States.ctx;var cls=function(){ctx.fillStyle="black";ctx.strokeStyle="white";ctx.lineWidth=3;ctx.fillRect(0,0,canvas.width,canvas.height)};var ver=function(){ctx.fillStyle="white";ctx.textBaseline="top";ctx.font="10px arial";ctx.textAlign="left";ctx.fillText("v"+States.ver,5,canvas.height-15)};var states={none:function(){},game:function(){States.disp.ship.draw(ctx,"blue","blue");States.disp.enemies.forEach(function(enemy){enemy.draw(ctx,"red","red")})},gameOver:function(){ctx.fillStyle="white";if(States.win){ctx.fillText("Victory",10,10)}else{ctx.fillText("Game Over",10,10)}}};return function(){cls();var drawState=states[States.current]||states["none"];drawState();ver()}}();var loop=function(){requestAnimationFrame(loop);States.tick();draw()};loop();
