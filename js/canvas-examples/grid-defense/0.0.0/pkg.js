/*
   canvas-example-grid-defense
   Copyright 2020 by Dustin Pfister
   https://raw.githubusercontent.com/dustinpfister/canvas-examples/master/LICENSE
 
   https://github.com/dustinpfister/canvas-examples
*/
var utils={};utils.createCanvas=function(opt){opt=opt||{};opt.container=opt.container||document.getElementById("canvas-app")||document.body;opt.canvas=document.createElement("canvas");opt.ctx=opt.canvas.getContext("2d");opt.canvas.className="canvas_example";opt.canvas.width=opt.width===undefined?320:opt.width;opt.canvas.height=opt.height===undefined?240:opt.height;opt.ctx.translate(.5,.5);opt.canvas.onselectstart=function(){return false};opt.canvas.style.imageRendering="pixelated";opt.ctx.imageSmoothingEnabled=false;opt.container.appendChild(opt.canvas);return opt};utils.getCanvasRelative=function(e){var canvas=e.target,bx=canvas.getBoundingClientRect(),pos={x:(e.changedTouches?e.changedTouches[0].clientX:e.clientX)-bx.left,y:(e.changedTouches?e.changedTouches[0].clientY:e.clientY)-bx.top,bx:bx};pos.x=Math.floor(pos.x/canvas.scrollWidth*canvas.width);pos.y=Math.floor(pos.y/canvas.scrollHeight*canvas.height);e.preventDefault();return pos};var Grid=function(opt){opt=opt||{};this.xOffset=opt.xOffset===undefined?5:opt.xOffset;this.yOffset=opt.yOffset===undefined?5:opt.yOffset;this.cellSize=opt.cellSize===undefined?32:opt.cellSize;this.cellWidth=opt.cellWidth||7;this.cellHeight=opt.cellHeight||6;this.cells=[];this.setCells(opt.forCell)};Grid.prototype.getCell=function(ix,y){var cell;if(arguments.length===1){cell=this.cells[ix]}if(arguments.length===2&&ix>=0&&ix<this.cellWidth){cell=this.cells[y*this.cellWidth+ix]}return cell?cell:false};Grid.prototype.getCellFromPoint=function(x,y){var insideX=x>=this.xOffset&&x<=this.xOffset+this.cellSize*this.cellWidth,insideY=y>=this.yOffset&&y<=this.yOffset+this.cellSize*this.cellHeight;if(insideX&&insideY){return this.getCell(Math.floor((x-this.xOffset)/this.cellSize),Math.floor((y-this.yOffset)/this.cellSize))}return false};Grid.prototype.setCells=function(forCell){this.cells=[];var ci=0,cellObj,cLen=this.cellWidth*this.cellHeight;forCell=forCell||function(){};while(ci<cLen){cellObj={i:ci,y:Math.floor(ci/this.cellWidth),x:ci%this.cellWidth};forCell(cellObj);this.cells.push(cellObj);ci+=1}};var Enemy=function(opt){this.board=opt.board||new UnitGrid;this.cell=opt.cell||{};this.ticksPerMove=8;this.ticks=0};Enemy.prototype.update=function(ticks){this.ticks+=ticks;if(this.ticks>=this.ticksPerMove){var target=this.board.getCell(Math.floor(this.cell.x-1),this.cell.y);if(target){if(!target.enemy){this.cell.enemy=false;target.enemy=this;this.cell=target}}else{this.board.hits+=1;this.cell.enemy=false}this.ticks=0}};var UnitGrid=function(opt){opt=opt||{};Object.assign(this,new Grid(opt));this.maxEnemies=opt.maxEnemies||5;this.tickRate=opt.tickRate===undefined?1e3/4:opt.tickRate;this.enemyCount=0;this.lastTick=new Date;this.hits=0;this.kills=0};UnitGrid.prototype=Object.create(new Grid);UnitGrid.prototype.spawn=function(){if(this.enemyCount<this.maxEnemies){var y=0,len=this.cellHeight,options=[],cell;while(y<len){cell=this.getCell(this.cellWidth-1,y);if(!cell.enemy){options.push(cell)}y+=1}if(options.length>0){cell=options[Math.floor(Math.random()*options.length)];cell.enemy=new Enemy({board:this,cell:cell})}}};UnitGrid.prototype.update=function(){var i=0,now=new Date,t=now-this.lastTick,ticks=t/this.tickRate,len=this.cells.length,cell;if(ticks>=1){this.enemyCount=0;while(i<len){cell=this.cells[i];if(cell.enemy){this.enemyCount+=1;cell.enemy.update(ticks)}i+=1}this.spawn();this.lastTick=now}};var draw={gridLineStyle:"white",enemyFillStyle:"red",textFill:"yellow"};draw.cls=function(ctx,canvas){ctx.fillStyle="blue";ctx.fillRect(0,0,canvas.width,canvas.height)};draw.gridCellLines=function(grid,ctx){var ci=0,x,y,cell,cLen=grid.cells.length;while(ci<cLen){cell=grid.cells[ci];x=cell.x*grid.cellSize+grid.xOffset+.5;y=cell.y*grid.cellSize+grid.yOffset+.5;ctx.strokeStyle=draw.gridLineStyle;ctx.strokeRect(x,y,grid.cellSize,grid.cellSize);if(cell.enemy){ctx.fillStyle=draw.enemyFillStyle;ctx.fillRect(x,y,grid.cellSize,grid.cellSize)}ci+=1}};draw.disp=function(state,ctx){var grid=state.grid;ctx.fillStyle=draw.textFill;ctx.textBaseline="top";ctx.font="10px arial";ctx.fillText("hits: "+grid.hits+"; kills: "+grid.kills,10,10)};draw.ver=function(state,ctx){ctx.fillStyle="white";ctx.textBaseline="top";ctx.font="10px arial";ctx.fillText("v"+state.ver,5,state.canvas.height-15)};(function(){var canvasObj=utils.createCanvas();var canvas=canvasObj.canvas;var ctx=canvasObj.ctx;var state={ver:"0.0.0",canvas:canvas,ctx:ctx,grid:new UnitGrid({xOffset:15,yOffset:25,cellSize:32,cellWidth:9})};canvas.addEventListener("click",function(e){var pos=utils.getCanvasRelative(e);var cell=state.grid.getCellFromPoint(pos.x,pos.y);if(cell.enemy){state.grid.kills+=1;cell.enemy=false}});var loop=function(){requestAnimationFrame(loop);state.grid.update();draw.cls(ctx,canvas);draw.gridCellLines(state.grid,ctx);draw.disp(state,ctx);draw.ver(state,ctx)};loop()})();
