/*
   canvas-example-game-flappy-collector
   Copyright 2020 by Dustin Pfister
   https://raw.githubusercontent.com/dustinpfister/canvas-examples/master/LICENSE
 
   https://github.com/dustinpfister/canvas-examples
*/
var utils={};utils.createCanvas=function(opt){opt=opt||{};opt.container=opt.container||document.getElementById("canvas-app")||document.body;opt.canvas=document.createElement("canvas");opt.ctx=opt.canvas.getContext("2d");opt.canvas.className="canvas_example";opt.canvas.width=opt.width===undefined?320:opt.width;opt.canvas.height=opt.height===undefined?240:opt.height;opt.ctx.translate(.5,.5);opt.canvas.onselectstart=function(){return false};opt.container.appendChild(opt.canvas);return opt};utils.getCanvasRelative=function(e){var canvas=e.target,bx=canvas.getBoundingClientRect(),pos={x:(e.changedTouches?e.changedTouches[0].clientX:e.clientX)-bx.left,y:(e.changedTouches?e.changedTouches[0].clientY:e.clientY)-bx.top,bx:bx};pos.x=Math.floor(pos.x/canvas.scrollWidth*canvas.width);pos.y=Math.floor(pos.y/canvas.scrollHeight*canvas.height);e.preventDefault();return pos};var game=function(){var bb=function(a,b){return!(a.y+a.size<b.y||a.y>b.y+b.size||a.x+a.size<b.x||a.x>b.x+b.size)};var spawnBerry=function(bird,canvas){var count=bird.berries.length,now=new Date,secs=(now-bird.berriesLastSpawn)/1e3;if(secs>=bird.berriesDelay){if(count<bird.berriesMax){var yRange=canvas.height-64;bird.berries.push({x:canvas.width+32,y:yRange-Math.random()*yRange,size:32,pps:64})}bird.berriesLastSpawn=now}};var updateBerries=function(bird,secs,canvas){var i=bird.berries.length,berry;while(i--){berry=bird.berries[i];berry.x-=berry.pps*secs;if(bb(bird,berry)){bird.points+=1;bird.berries.splice(i,1)}if(berry.x<=berry.size*-1){bird.berries.splice(i,1)}}};var updateBirdPPS=function(bird,secs){bird.pps=128-256*bird.flap;bird.flap=bird.flap>0?bird.flap-.9*secs:0};var api={};api.newBird=function(){return{ver:"0.0.1",x:32,y:0,size:32,flap:0,pps:64,lt:new Date,berries:[],berriesLastSpawn:new Date,berriesDelay:1,berriesMax:4,points:0}};api.update=function(bird,canvas){var now=new Date,secs=(now-bird.lt)/1e3;bird.y+=bird.pps*secs;if(bird.y>=canvas.height-bird.size){bird.y=canvas.height-bird.size}if(bird.y<0){bird.y=0}updateBerries(bird,secs,canvas);spawnBerry(bird,canvas);updateBirdPPS(bird,secs);bird.lt=new Date};api.flap=function(bird){bird.flap=1};return api}();var draw={};draw.background=function(canvas,ctx){ctx.fillStyle="black";ctx.fillRect(0,0,canvas.width,canvas.height)};draw.bird=function(bird,ctx){ctx.fillStyle="green";ctx.fillRect(bird.x,bird.y,bird.size,bird.size)};draw.info=function(bird,ctx){ctx.fillStyle="white";ctx.textBaseline="top";ctx.fillText("points: "+bird.points,10,10);ctx.fillText("bird pos: ( "+Math.floor(bird.x)+","+Math.floor(bird.y)+")",10,20)};draw.berries=function(bird,ctx){ctx.fillStyle="red";bird.berries.forEach(function(berry){ctx.fillRect(berry.x,berry.y,berry.size,berry.size)})};draw.ver=function(bird,canvas,ctx){ctx.fillStyle="white";ctx.textBaseline="top";ctx.font="10px arial";ctx.fillText("v"+bird.ver,5,canvas.height-10)};var canvasObj=utils.createCanvas(),canvas=canvasObj.canvas,ctx=canvasObj.ctx;var bird=game.newBird();canvas.addEventListener("click",function(e){var pos=utils.getCanvasRelative(e);console.log(pos.x,pos.y);game.flap(bird)});var loop=function(){requestAnimationFrame(loop);draw.background(canvas,ctx);draw.berries(bird,ctx);draw.bird(bird,ctx);draw.info(bird,ctx);draw.ver(bird,canvas,ctx);game.update(bird,canvas)};loop();
