/*
   canvas-example-game-map-idle
   Copyright 2020 by Dustin Pfister
   https://raw.githubusercontent.com/dustinpfister/canvas-examples/master/LICENSE
 
   https://github.com/dustinpfister/canvas-examples
*/
var u={};u.distance=function(x1,y1,x2,y2){return Math.sqrt(Math.pow(x1-x2,2)+Math.pow(y1-y2,2))};u.createCanvas=function(opt){opt=opt||{};opt.container=opt.container||document.getElementById("canvas-app")||document.body;opt.canvas=document.createElement("canvas");opt.ctx=opt.canvas.getContext("2d");opt.canvas.className="canvas_example";opt.canvas.width=opt.width===undefined?320:opt.width;opt.canvas.height=opt.height===undefined?240:opt.height;opt.ctx.translate(.5,.5);opt.canvas.onselectstart=function(){return false};opt.container.appendChild(opt.canvas);return opt};u.getCanvasRelative=function(e){var canvas=e.target,bx=canvas.getBoundingClientRect(),pos={x:(e.changedTouches?e.changedTouches[0].clientX:e.clientX)-bx.left,y:(e.changedTouches?e.changedTouches[0].clientY:e.clientY)-bx.top,bx:bx};pos.x=Math.floor(pos.x/canvas.scrollWidth*canvas.width);pos.y=Math.floor(pos.y/canvas.scrollHeight*canvas.height);e.preventDefault();return pos};var PM=function(){var api={};api.newPM=function(){return{down:false,angle:0,dist:0,delta:0,sp:{x:-1,y:-1},cp:{x:-1,y:-1}}};api.updatePM=function(pm){pm.dist=0;pm.delta=0;pm.angle=0;if(pm.cp.x>=0&&pm.cp.y>=0){pm.dist=u.distance(pm.sp.x,pm.sp.y,pm.cp.x,pm.cp.y)}if(pm.down&&pm.dist>=5){var per=pm.dist/64;per=per>1?1:per;per=per<0?0:per;pm.delta=per*3;pm.angle=Math.atan2(pm.cp.y-pm.sp.y,pm.cp.x-pm.sp.x)}};api.stepPointByPM=function(pm,pt,invert){invert=invert===undefined?false:invert;invert=invert?-1:1;pt.x+=Math.cos(pm.angle)*pm.delta*invert;pt.y+=Math.sin(pm.angle)*pm.delta*invert};api.onPointerStart=function(pm,pos,e){pm.down=true;pm.sp={x:pos.x,y:pos.y}};api.onPointerMove=function(pm,pos,e){pm.cp={x:pos.x,y:pos.y}};api.onPointerEnd=function(pm,pos,e){pm.down=false;pm.sp={x:-1,y:-1};pm.cp={x:-1,y:-1}};return api}();var map={};map.parseGridProps=function(grid){var a={};a.width=grid.width||64;a.height=grid.height||16;a.cellSize=grid.cellSize||32;a.offset={};a.offset.x=grid.xOffset===undefined?0:grid.xOffset;a.offset.y=grid.yOffset===undefined?0:grid.yOffset;a.bufferSize=grid.bufferSize===undefined?32:grid.bufferSize;a.selectedCellIndex=grid.selectedCellIndex||-1;a.cells=[];a.money=0;a.lastUpdate=new Date;a.tickTime=3e3;return a};map.createGridObject=function(w,h){var a=map.parseGridProps({width:w,height:h});return map.createClearCellGrid(a)};map.createClearCellGrid=function(grid){var a=map.parseGridProps(grid);var i=0,x,y,len=a.width*a.height;while(i<len){a.cells.push({i:i,x:i%a.width,y:Math.floor(i/a.width),type:0,worth:0,bought:true,building:{}});i+=1}return a};map.setGridWorth=function(grid,x,y,b){x=x===undefined?0:x;y=y===undefined?0:y;b=b===undefined?2:b;var i=grid.cells.length,d,cell;while(i--){cell=grid.cells[i];d=u.distance(cell.x,cell.y,x,y);cell.worth=1+Math.pow(b,d)}};map.createBuilding=function(grid,x,y,index,buildOptions){buildOptions=buildOptions||[{name:"farm",moneyPerTick:1}];index=index===undefined?0:index;var cell=map.get(grid,x,y);if(cell.building.index===undefined&&cell.bought){cell.building=Object.assign({index:index},buildOptions[index])}};map.clampedOffsets=function(grid,canvas){canvas=canvas||{width:320,height:120};var w=grid.width*grid.cellSize,h=grid.height*grid.cellSize,bufferSize=grid.bufferSize,xMin=bufferSize,yMin=bufferSize,xMax=(w-canvas.width+bufferSize)*-1,yMax=(h-canvas.height+bufferSize)*-1,x=grid.offset.x,y=grid.offset.y;x=x>xMin?xMin:x;y=y>yMin?yMin:y;x=x<xMax?xMax:x;y=y<yMax?yMax:y;return{x:x,y:y}};map.get=function(grid,x,y){if(x<0||y<0||x>=grid.width||y>=grid.height){return{}}return grid.cells[y*grid.width+x]};map.getCellPositionFromCanvasPoint=function(grid,x,y){return{x:Math.floor((x-grid.offset.x)/grid.cellSize),y:Math.floor((y-grid.offset.y)/grid.cellSize)}};map.getCellFromCanvasPoint=function(grid,x,y){var pos=map.getCellPositionFromCanvasPoint(grid,x,y);return map.get(grid,pos.x,pos.y)};map.updateGrid=function(grid){var now=new Date,t=now-grid.lastUpdate,ticks=Math.floor(t/grid.tickTime),cell,i=grid.cells.length;if(ticks>=1){while(i--){cell=grid.cells[i];if(cell.building.index>=0){grid.money+=cell.building.moneyPerTick*ticks}}grid.lastUpdate=now}grid.offset=map.clampedOffsets(grid,canvas)};var draw=function(){var drawStateDebug={nav:function(ctx,grid,states){var pm=states.pm;ctx.fillText("pm.angle: "+pm.angle,10,30);ctx.fillText("pm.down: "+pm.down,10,40);ctx.fillText("pm.cp: "+pm.cp.x,10,50)},land:function(ctx,grid){var cell=grid.cells[grid.selectedCellIndex];ctx.fillText("index (x,y): "+cell.i+" ("+cell.x+","+cell.y+")",10,20);ctx.fillText("worth: "+cell.worth,10,30)},building:function(ctx,grid){var cell=grid.cells[grid.selectedCellIndex],build=cell.building;ctx.fillText("index (x,y): "+cell.i+" ("+cell.x+","+cell.y+")",10,20);ctx.fillText("worth: "+cell.worth,10,30);ctx.fillText("name: "+build.name,10,40);ctx.fillText("money per tick: "+build.moneyPerTick,10,50)}};var drawCells=function(grid,ctx,canvas,pxRatio,xOffset,yOffset,cellSize){var colors=["yellow","green"];grid.cells.forEach(function(cell){ctx.fillStyle=colors[cell.type]||"white";x=cell.x*cellSize+xOffset*pxRatio;y=cell.y*cellSize+yOffset*pxRatio;ctx.fillRect(x,y,cellSize,cellSize);if(!cell.bought){ctx.fillStyle="rgba(0,0,0,0.5)";ctx.fillRect(x,y,cellSize,cellSize)}if(cell.building.index>=0){ctx.fillStyle="red";ctx.fillRect(x,y,cellSize,cellSize)}ctx.strokeStyle="white";ctx.strokeRect(x,y,cellSize,cellSize)})};return{background:function(ctx,canvas){ctx.fillStyle="black";ctx.fillRect(0,0,canvas.width,canvas.height)},gridStatusInfo:function(ctx,canvas,grid){ctx.fillStyle="rgba(255,255,255,0.5)";ctx.fillRect(0,canvas.height-20,canvas.width,20);ctx.fillStyle="black";ctx.textBaseline="top";ctx.textAlign="left";ctx.font="15px courier";ctx.fillText("$"+grid.money.toFixed(2),5,canvas.height-15)},buildMenu:function(ctx,canvas,buildMenu){ctx.fillStyle="rgba(255,255,255,0.5)";ctx.fillRect(0,0,96,canvas.height);ctx.strokeStyle="rgba(255,0,0,0.5)";ctx.strokeRect(0,0,96,96);ctx.fillStyle="rgba(255,0,0,0.5)";ctx.textAlign="center";ctx.fillText(buildMenu.buildOptions[0].name,48,32)},stateDebugInfo:function(ctx,stateName,grid,states){var state=drawStateDebug[stateName];ctx.fillStyle="rgba(0,0,0,0.25)";ctx.fillRect(0,0,canvas.width,canvas.height);ctx.fillStyle="white";ctx.textAlign="left";ctx.fillText("current state: "+stateName,10,10);if(state){state(ctx,grid,states)}},map:function(grid,ctx,canvas,pxRatio){var colors=["yellow","green"],cellSize=grid.cellSize||10,x,y,xOffset=grid.offset.x,yOffset=grid.offset.y;pxRatio=pxRatio||1;cellSize=cellSize*pxRatio;ctx.lineWidth=1;drawCells(grid,ctx,canvas,pxRatio,xOffset,yOffset,cellSize);if(grid.selectedCellIndex>-1){ctx.strokeStyle="red";var cell=grid.cells[grid.selectedCellIndex],x=cell.x*cellSize+xOffset*pxRatio;y=cell.y*cellSize+yOffset*pxRatio;ctx.strokeStyle="red";ctx.strokeRect(x,y,cellSize,cellSize)}},navCirclePM:function(pm,ctx,canvas){var cx=pm.sp.x,cy=pm.sp.y,x,y,min=64,per=0,a=pm.angle;ctx.strokeStyle="white";ctx.lineWidth=3;ctx.beginPath();ctx.arc(cx,cy,min/2,0,Math.PI*2);ctx.stroke();x=Math.cos(a)*min+cx;y=Math.sin(a)*min+cy;ctx.beginPath();ctx.moveTo(cx,cy);ctx.lineTo(x,y);ctx.stroke();per=pm.delta/3;x=Math.cos(a)*min*per+cx;y=Math.sin(a)*min*per+cy;ctx.beginPath();ctx.arc(x,y,10,0,Math.PI*2);ctx.stroke()},ver:function(ctx,canvas,states){ctx.fillStyle="white";ctx.textBaseline="top";ctx.font="10px arial";ctx.textAlign="left";ctx.fillText("v"+states.ver,canvas.width-35,5)}}}();var canvasObj=u.createCanvas({width:640,height:480}),canvas=canvasObj.canvas,ctx=canvasObj.ctx;var buildMenu={yOffet:0,buildOptions:[{name:"farm",moneyPerTick:1}]};var states={ver:"0.0.0",currentState:"init",grid:map.createGridObject(50,25),pm:PM.newPM(),always:{tick:function(){map.updateGrid(states.grid);draw.background(ctx,canvas);draw.map(states.grid,ctx,canvas);draw.stateDebugInfo(ctx,states.currentState,states.grid,states);draw.ver(ctx,canvas,states)}},init:{tick:function(){grid=states.grid;grid.offset={x:grid.cellSize*grid.width/2*-1+canvas.width/2,y:grid.cellSize*grid.height/2*-1+canvas.height/2};map.setGridWorth(grid,0,0,2);map.createBuilding(grid,8,6,0);states.currentState="disp"}},disp:{tick:function(){PM.updatePM(states.pm);draw.gridStatusInfo(ctx,canvas,states.grid)},pointer:{start:function(pos,grid,e){grid.mapMoveStartPoint={x:pos.x,y:pos.y};PM.onPointerStart(states.pm,pos,e)},move:function(pos,grid,e){PM.onPointerMove(states.pm,pos,e);if(states.pm.dist>=32&&states.pm.down){states.currentState="nav"}},end:function(pos,grid,e){if(states.pm.down){var cell=map.getCellFromCanvasPoint(grid,pos.x,pos.y);if(cell.i===grid.selectedCellIndex){grid.selectedCellIndex=-1}else{if(cell.i>=0){grid.selectedCellIndex=cell.i;var cell=grid.cells[cell.i];if(cell.building.index>=0){states.currentState="building"}else{states.currentState="land"}}}}}}},nav:{tick:function(){PM.updatePM(states.pm);draw.navCirclePM(states.pm,ctx,canvas);PM.stepPointByPM(states.pm,grid.offset,true)},pointer:{move:function(pos,grid,e){PM.onPointerMove(states.pm,pos,e)},end:function(pos,grid,e){PM.onPointerEnd(states.pm,pos,e);states.currentState="disp"}}},land:{tick:function(){draw.buildMenu(ctx,canvas,buildMenu)},pointer:{end:function(pos,grid,e){if(pos.x>=96){grid.selectedCellIndex=-1}else{if(pos.y<=96){var buildIndex=0,cell=grid.cells[grid.selectedCellIndex];map.createBuilding(grid,cell.x,cell.y,buildIndex,buildMenu.buildOptions)}}PM.onPointerEnd(states.pm,pos,e);states.currentState="disp"}}},building:{tick:function(){},pointer:{end:function(pos,grid,e){PM.onPointerEnd(states.pm,pos,e);if(pos.x>=96){grid.selectedCellIndex=-1;states.currentState="disp"}}}}};var loop=function(){requestAnimationFrame(loop);states.always.tick();states[states.currentState].tick()};loop();var attachPointerEvent=function(canvas,domType,smType){canvas.addEventListener(domType,function(e){var pos=u.getCanvasRelative(e),stateObj=states[states.currentState];e.preventDefault();if(stateObj.pointer){var handler=stateObj.pointer[smType];if(handler){if(pos.x<0||pos.x>=canvas.width||pos.y<0||pos.y>=canvas.height){var endHandler=stateObj.pointer.end;if(endHandler){endHandler(pos,states.grid,e)}}else{handler(pos,states.grid,e)}}}})};attachPointerEvent(canvas,"mousedown","start");attachPointerEvent(canvas,"mousemove","move");attachPointerEvent(canvas,"mouseup","end");attachPointerEvent(canvas,"mouseout","end");attachPointerEvent(canvas,"touchstart","start");attachPointerEvent(canvas,"touchmove","move");attachPointerEvent(canvas,"touchend","end");attachPointerEvent(canvas,"touchcancel","end");
