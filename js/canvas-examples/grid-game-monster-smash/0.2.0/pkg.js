/*
   canvas-example-game-monster-smash
   Copyright 2020 by Dustin Pfister
   https://raw.githubusercontent.com/dustinpfister/canvas-examples/master/LICENSE
 
   https://github.com/dustinpfister/canvas-examples
*/
var utils={};utils.distance=function(x1,y1,x2,y2){return Math.sqrt(Math.pow(x1-x2,2)+Math.pow(y1-y2,2))};utils.angleToPoint=function(x1,y1,x2,y2,scale){scale=scale===undefined?Math.PI*2:scale;var aTan=Math.atan2(y1-y2,x1-x2);return(aTan+Math.PI)/(Math.PI*2)*scale};utils.createCanvas=function(opt){opt=opt||{};opt.container=opt.container||document.getElementById("canvas-app")||document.body;opt.canvas=document.createElement("canvas");opt.ctx=opt.canvas.getContext("2d");opt.canvas.className="canvas_example";opt.canvas.width=opt.width===undefined?320:opt.width;opt.canvas.height=opt.height===undefined?240:opt.height;opt.ctx.translate(.5,.5);opt.canvas.onselectstart=function(){return false};opt.container.appendChild(opt.canvas);return opt};utils.getCanvasRelative=function(e){var canvas=e.target,bx=canvas.getBoundingClientRect(),pos={x:(e.changedTouches?e.changedTouches[0].clientX:e.clientX)-bx.left,y:(e.changedTouches?e.changedTouches[0].clientY:e.clientY)-bx.top,bx:bx};pos.x=Math.floor(pos.x/canvas.scrollWidth*canvas.width);pos.y=Math.floor(pos.y/canvas.scrollHeight*canvas.height);e.preventDefault();return pos};var mapMod=function(){var api={};var createCells=function(map){var cells=[];var len=map.w*map.h,i=0;while(i<len){cells.push({i:i,x:i%map.w,y:Math.floor(i/map.w),unit:false});i+=1}return cells};api.get=function(map,x,y){if(x<0||y<0||x>=map.w||y>=map.h){return false}return map.cells[y*map.w+x]};api.getCellByPointer=function(map,x,y){var cx=Math.floor((x-map.margin.x)/map.cellSize),cy=Math.floor((y-map.margin.y)/map.cellSize);return api.get(map,cx,cy)};api.create=function(opt){opt=opt||{};var map={w:opt.w||9,h:opt.h||7,cellSize:32,spawnEnabled:opt.spawnEnabled||false,spawnLimit:opt.spawnLimit||2,spawnCells:opt.spawnCells||[0],margin:{x:5,y:5},cells:[]};map.cells=createCells(map);return map};return api}();var gameMod=function(){var createBaseUnit=function(){return{HP:100,maxHP:100,weaponIndex:0,sheetIndex:0,currentCell:false,active:false}};var createEnemyUnit=function(){var enemy=createBaseUnit();enemy.sheetIndex=1;enemy.sight=3;return enemy};var createPlayerUnit=function(){var player=createBaseUnit();player.sheetIndex=0;return player};var createEnemyUnitPool=function(size){var pool=[];var i=0;while(i<size){pool.push(createEnemyUnit());i+=1}return pool};var getActiveCount=function(game,pool){pool=pool||game.enemyPool;return pool.reduce(function(acc,obj){acc=typeof acc==="object"?!!acc.active:acc;return acc+!!obj.active})};var spawnEnemy=function(game){var map=getCurrentMap(game),e,spawnCell=map.cells[map.spawnCells[0]],activeCount;if(map.spawnEnabled){activeCount=getActiveCount(game,game.enemyPool);if(activeCount<map.spawnLimit&&spawnCell.unit===false){e=getNextInactive(game,game.enemyPool);if(e){placeUnit(game,e,spawnCell.x,spawnCell.y)}}}};var getNextInactive=function(game,pool){pool=pool||game.enemyPool;var i=0,len=pool.length;while(i<len){if(!pool[i].active){return pool[i]}i+=1}return false};var getCurrentMap=function(game){return game.maps[game.mapIndex]};var placeUnit=function(game,unit,x,y){var map=getCurrentMap(game);var newCell=mapMod.get(map,x,y);if(!unit){return}if(newCell){if(unit.currentCell){map.cells[unit.currentCell.i].unit=false}unit.active=true;unit.currentCell=newCell;map.cells[unit.currentCell.i].unit=unit}};var removeUnit=function(game,unit){unit.active=false;getCurrentMap(game).cells[unit.currentCell.i].unit=false;unit.currentCell=false};var setupGame=function(game){game.mapIndex=0;var map=getCurrentMap(game);placeUnit(game,game.player,0,0);placeUnit(game,getNextInactive(game),5,5);placeUnit(game,getNextInactive(game),2,5)};var moveEnemies=function(game){var i=0,cell,radian,map=getCurrentMap(game),e,cx,cy,p=game.player,len=game.enemyPool.length;while(i<len){e=game.enemyPool[i];if(e.active){cell=e.currentCell;if(utils.distance(cell.x,cell.y,p.currentCell.x,p.currentCell.y)<=e.sight){radian=utils.angleToPoint(cell.x,cell.y,p.currentCell.x,p.currentCell.y)}else{radian=Math.PI*2*Math.random()}cx=Math.round(cell.x+Math.cos(radian));cy=Math.round(cell.y+Math.sin(radian));var newCell=mapMod.get(map,cx,cy);if(!newCell.unit){placeUnit(game,e,cx,cy)}}i+=1}};var api={};api.create=function(opt){opt=opt||{};var game={mode:"map",maps:[],mapIndex:0,targetCell:false,player:createPlayerUnit(),kills:0,enemyPool:createEnemyUnitPool(5)};game.maps.push(mapMod.create({spawnEnabled:true}));setupGame(game);return game};api.update=function(game,secs){var cell,map=getCurrentMap(game),radian,target;if(target=game.targetCell){cell=game.player.currentCell;if(target!=cell){radian=utils.angleToPoint(cell.x,cell.y,target.x,target.y);var cx=Math.round(cell.x+Math.cos(radian)),cy=Math.round(cell.y+Math.sin(radian));var newCell=mapMod.get(map,cx,cy);if(!newCell.unit){placeUnit(game,game.player,cx,cy)}else{var e=newCell.unit;e.active=false;removeUnit(game,e);game.kills+=1;placeUnit(game,game.player,cx,cy)}game.targetCell=false;moveEnemies(game);spawnEnemy(game)}}};return api}();var draw=function(){var unitColors=["blue","red"];return{back:function(sm){var canvas=sm.canvas,ctx=sm.ctx;ctx.fillStyle="black";ctx.fillRect(0,0,canvas.width,canvas.height)},map:function(sm){var canvas=sm.canvas,ctx=sm.ctx,map=sm.game.maps[sm.game.mapIndex];var cs=map.cellSize,i=0,x,y,len=map.cells.length,cell;while(i<len){cell=map.cells[i];x=map.margin.x+cell.x*cs;y=map.margin.y+cell.y*cs;ctx.fillStyle="green";ctx.beginPath();ctx.rect(x,y,32,32);ctx.fill();ctx.stroke();if(cell.unit){if(cell.unit.active){ctx.fillStyle=unitColors[cell.unit.sheetIndex];ctx.beginPath();ctx.rect(x,y,32,32);ctx.fill();ctx.stroke()}}i+=1}},info:function(sm){var ctx=sm.ctx,canvas=sm.canvas;ctx.fillStyle="white";ctx.font="10px courier";ctx.textBaseline="top";var pos=sm.input.pos;ctx.fillText("pointerDown: "+sm.input.pointerDown+" pos: "+pos.x+","+pos.y,5,5);ctx.fillText("kills: "+sm.game.kills,5,15);ctx.fillText("v"+sm.ver,1,canvas.height-11)}}}();(function(){var canvasObj=utils.createCanvas();var canvas=canvasObj.canvas;var ctx=canvasObj.ctx;var sm={ver:"0.2.0",game:gameMod.create(),canvas:canvas,ctx:ctx,input:{pointerDown:false,pos:{x:0,y:0}}};var pointerHanders={start:function(sm,e){var pos=sm.input.pos;sm.input.pointerDown=true;var cell=mapMod.getCellByPointer(sm.game.maps[sm.game.mapIndex],pos.x,pos.y);if(cell){sm.game.targetCell=cell}},move:function(sm,e){},end:function(sm,e){sm.input.pointerDown=false;loop()}};var createPointerHandler=function(sm,type){return function(e){sm.input.pos=utils.getCanvasRelative(e);pointerHanders[type](sm,e)}};canvas.addEventListener("mousedown",createPointerHandler(sm,"start"));canvas.addEventListener("mousemove",createPointerHandler(sm,"move"));canvas.addEventListener("mouseup",createPointerHandler(sm,"end"));var loop=function(){gameMod.update(sm.game);draw.back(sm);draw.map(sm);draw.info(sm)};loop()})();
