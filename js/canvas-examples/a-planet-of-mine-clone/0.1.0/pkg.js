/*
   canvas-example-a-planet-of-mine-clone
   Copyright 2020 by Dustin Pfister
   https://raw.githubusercontent.com/dustinpfister/canvas-examples/master/LICENSE
 
   https://github.com/dustinpfister/canvas-examples
*/
var utils={};utils.boundingBox=function(x1,y1,w1,h1,x2,y2,w2,h2){return!(y1+h1<y2||y1>y2+h2||x1+w1<x2||x1>x2+w2)};utils.distance=function(x1,y1,x2,y2){return Math.sqrt(Math.pow(x1-x2,2)+Math.pow(y1-y2,2))};utils.createCanvas=function(opt){opt=opt||{};opt.container=opt.container||document.getElementById("canvas-app")||document.body;opt.canvas=document.createElement("canvas");opt.ctx=opt.canvas.getContext("2d");opt.canvas.className="canvas_example";opt.canvas.width=opt.width===undefined?320:opt.width;opt.canvas.height=opt.height===undefined?240:opt.height;opt.ctx.translate(.5,.5);opt.canvas.onselectstart=function(){return false};opt.container.appendChild(opt.canvas);return opt};utils.getCanvasRelative=function(e){var canvas=e.target,bx=canvas.getBoundingClientRect(),pos={x:(e.changedTouches?e.changedTouches[0].clientX:e.clientX)-bx.left,y:(e.changedTouches?e.changedTouches[0].clientY:e.clientY)-bx.top,bx:bx};pos.x=Math.floor(pos.x/canvas.scrollWidth*canvas.width);pos.y=Math.floor(pos.y/canvas.scrollHeight*canvas.height);e.preventDefault();return pos};var Machine=function(){var attachCanvasEvent=function(sm,DOMType,smType){sm.canvas.addEventListener(DOMType,function(e){var stateObj=sm.states[sm.currentState],pt={},handler,mode;pt.pos=utils.getCanvasRelative(e);pt.overlap=function(x,y,w,h){return utils.boundingBox(pt.pos.x,pt.pos.y,1,1,x,y,w,h)};pt.distance=function(x,y){return utils.distance(pt.pos.x,pt.pos.y,x,y)};e.preventDefault();if(stateObj.userPointer){handler=stateObj.userPointer[smType];if(handler){handler(pt,sm,e)}}if(stateObj.modes&&sm.currentMode){mode=stateObj.modes[sm.currentMode];if(mode.userPointer){handler=mode.userPointer[smType];if(handler){handler(pt,sm,e)}}}})};var attachAllCanvasEvents=function(sm){attachCanvasEvent(sm,"mousedown","start");attachCanvasEvent(sm,"mousemove","move");attachCanvasEvent(sm,"mouseup","end");attachCanvasEvent(sm,"touchstart","start");attachCanvasEvent(sm,"touchmove","move");attachCanvasEvent(sm,"touchend","end")};var api=function(container,w,h){var sm={ver:"0.1.0",currentState:null,currentMode:null,game:{},solar:{},draw:{},states:{},canvas:null,container:null,ctx:null,load:function(stateObj){sm.states[stateObj.name||"game"]=stateObj;if(stateObj.bootState){sm.currentState=stateObj.name}},start:function(stateName){sm.currentState=stateName||sm.currentState;var init=sm.states[sm.currentState].init||null;if(init){init(sm)}loop()}};var canvasObj=utils.createCanvas();sm.canvas=canvasObj.canvas;sm.ctx=canvasObj.ctx;sm.container=canvasObj.container;attachAllCanvasEvents(sm);var loop=function(){requestAnimationFrame(loop);var stateObj=sm.states[sm.currentState]||{};if(stateObj.tick){stateObj.tick(sm)}if(stateObj.modes&&sm.currentMode){var mode=stateObj.modes[sm.currentMode];if(mode.tick){mode.tick(sm)}}};return sm};api.boundingBox=utils.boundingBox;api.distance=utils.distance;return api}();var worldMod=function(){var itemDataBase=[{i:0,desc:"ship",maxWorkers:2},{i:1,desc:"house",maxWorkers:0},{i:2,desc:"mine",maxWorkers:3,getSolids:true},{i:3,desc:"farm",maxWorkers:1},{i:4,desc:"well",maxWorkers:1,getLiquids:true},{i:5,desc:"trees",maxWorkers:1},{i:6,desc:"berries",maxWorkers:1}];var createWorkerObject=function(parent){return{actionsPerTick:1,parent:parent,pos:{x:0,y:0,w:32,h:32}}};var createLandObject=function(opt){opt=opt||{};opt.pos=opt.pos||{};return{itemIndex:opt.itemIndex===undefined?null:opt.itemIndex,workers:[],maxWorkers:0,actionRate:3,pos:{x:opt.pos.x||0,y:opt.pos.y||0,w:opt.pos.w||64,h:opt.pos.h||128},groundType:opt.groundType||"grass",solidCount:opt.solidCount||0,liquidCount:opt.liquidCount||0}};var setLandItem=function(land,itemIndex){var item=itemDataBase[itemIndex];land.itemIndex=itemIndex;land.maxWorkers=item.maxWorkers};var createWorker=function(world){var fw=world.freeWorkers,len=fw.workers.length;if(len<fw.maxWorkers){var worker=createWorkerObject(fw);worker.pos.x=fw.pos.x+len*(32+1);worker.pos.y=fw.pos.y;fw.workers.push(worker)}};var positionWorkers=function(area){var dx=0,dy=1;if(area.groundType==="freearea"){dx=1;dy=0}area.workers.forEach(function(worker,i){worker.pos.x=area.pos.x+i*32*dx;worker.pos.y=area.pos.y+i*32*dy})};var createWorldLand=function(world){var len=world.landCount||8,lands=[],i=0;while(i<len){lands.push(createLandObject({pos:{x:32+i*(64+2),y:120,w:64,h:96},solidCount:10,liquidCount:10}));i+=1}setLandItem(lands[0],0);setLandItem(lands[1],2);setLandItem(lands[2],2);createWorker(world);createWorker(world);createWorker(world);return lands};return{create:function(solar){var world={solar:solar,landCount:4,lands:[],moveWorker:null,rotationRate:1,rotationPer:0,deltaEXP:100,freeWorkers:{pos:{x:32,y:32,w:100,h:50},groundType:"freearea",maxWorkers:3,workers:[]}};world.moveWoker=function(worker,newArea){var i=worker.parent.workers.length;while(i--){var w=worker.parent.workers[i];if(w===worker){worker.parent.workers.splice(i,1);positionWorkers(worker.parent);worker.parent=newArea;newArea.workers.push(worker);positionWorkers(newArea);break}}return true};world.createWorker=function(){createWorker(world)};world.lands=createWorldLand(world);world.onTickEnd=function(solar,ticks){world.lands.forEach(function(land){var item=itemDataBase[land.itemIndex]||{},workerCount=land.workers.length;if(item.getSolids&&workerCount>=1){if(land.solidCount>0){if(land.solidCount>=workerCount){land.solidCount-=workerCount;solar.resources.solid+=workerCount}else{solar.resources.solid+=land.solidCount;land.solidCount=0}}}})};world.onTickProgress=function(solar,ticks,tickProgress){world.rotationPer=(ticks+tickProgress)%world.rotationRate/world.rotationRate;world.rotationPer=world.rotationPer>=1?1:world.rotationPer;if(tickProgress>=1){solar.exp+=world.deltaEXP}};return world}}}();var solarMod=function(){return{create:function(){var solar={lt:new Date,tickRate:1e4,ticks:0,t:0,tPer:0,currentWorldIndex:0,currentWorld:{},exp:0,resources:{solid:0,liquid:0,wood:0,raspberries:500}};solar.worlds=[];solar.worlds.push(worldMod.create(solar));solar.currentWorld=solar.worlds[solar.currentWorldIndex];return solar},update:function(solar){var now=new Date,t=now-solar.lt;solar.t=t;solar.tPer=t/solar.tickRate;solar.tPer=solar.tPer>1?1:solar.tPer;solar.currentWorld=solar.worlds[solar.currentWorldIndex];solar.worlds.forEach(function(world){world.onTickProgress(solar,solar.ticks,solar.tPer);if(solar.tPer===1){world.onTickEnd(solar,solar.ticks)}});if(solar.tPer===1){solar.ticks+=1;solar.lt=now}}}}();var draw={};draw.back=function(sm){var canvas=sm.canvas,ctx=sm.ctx;ctx.fillStyle="black";ctx.fillRect(0,0,canvas.width,canvas.height)};draw.tickProgress=function(sm){var canvas=sm.canvas,ctx=sm.ctx,solar=sm.solar,world=solar.currentWorld;ctx.fillStyle="white";ctx.fillRect(0,0,canvas.width*solar.tPer,10);ctx.fillStyle="green";ctx.fillRect(0,10,canvas.width*world.rotationPer,10)};draw.world=function(sm){var canvas=sm.canvas,ctx=sm.ctx,solar=sm.solar,i=0,world=solar.currentWorld,land;var pos=world.freeWorkers.pos;ctx.fillStyle="grey";ctx.fillRect(pos.x,pos.y,pos.w,pos.h);while(i<world.lands.length){land=world.lands[i];ctx.fillStyle="green";ctx.fillRect(land.pos.x,land.pos.y,land.pos.w,land.pos.h);i+=1}world.lands.forEach(function(land){land.workers.forEach(function(worker){ctx.fillStyle="blue";ctx.fillRect(worker.pos.x,worker.pos.y,worker.pos.w,worker.pos.h)})});world.freeWorkers.workers.forEach(function(worker){ctx.fillStyle="red";ctx.fillRect(worker.pos.x,worker.pos.y,worker.pos.w,worker.pos.h)})};draw.solar=function(sm){};draw.debugSolar=function(sm){var canvas=sm.canvas,ctx=sm.ctx,solar=sm.solar,world=sm.currentWorld;var text="";Object.keys(solar.resources).forEach(function(resourceName){text+=resourceName+":"+solar.resources[resourceName]+"; "});ctx.fillStyle="white";ctx.textBaseline="top";ctx.fillText(text,5,15);ctx.fillText("exp: "+solar.exp,5,30)};draw.debugLand=function(sm){var canvas=sm.canvas,ctx=sm.ctx,solar=sm.solar,world=solar.currentWorld;ctx.fillStyle="white";ctx.textBaseline="top";world.lands.forEach(function(land){var pos=land.pos;ctx.fillText("workers: "+land.workers.length+"/"+land.maxWorkers,pos.x,pos.y);ctx.fillText("solids: "+land.solidCount,pos.x,pos.y+10);ctx.fillText("liquids: "+land.liquidCount,pos.x,pos.y+20)})};draw.ver=function(sm){var ctx=sm.ctx;ctx.fillStyle="white";ctx.textBaseline="top";ctx.font="10px arial";ctx.fillText("v"+sm.ver,10,sm.canvas.height-15)};var sm=Machine("canvas-app");sm.load({name:"game",bootState:true,init:function(sm){sm.solar=solarMod.create()},tick:function(sm){var ctx=sm.ctx;solarMod.update(sm.solar);draw.back(sm);draw.world(sm);draw.tickProgress(sm);draw.debugLand(sm);draw.debugSolar(sm);draw.ver(sm)},userPointer:{start:function(pt,sm,e){var world=sm.solar.currentWorld;var fw=world.freeWorkers;if(pt.overlap(fw.pos.x,fw.pos.y,fw.pos.w,fw.pos.h)){var len=fw.workers.length;if(len>0){var i=len;while(i--){var worker=fw.workers[i],pos=worker.pos;if(pt.overlap(pos.x,pos.y,pos.w,pos.h)){world.moveWorker=worker;break}}}else{world.createWorker()}}var li=world.lands.length;lands:while(li--){var land=world.lands[li],wi=land.workers.length;while(wi--){var worker=land.workers[wi],pos=worker.pos;if(pt.overlap(pos.x,pos.y,pos.w,pos.h)){world.moveWorker=worker;break lands}}}},move:function(pt,sm,e){var world=sm.solar.currentWorld;if(world.moveWorker){world.moveWorker.pos.x=pt.pos.x-16;world.moveWorker.pos.y=pt.pos.y-16}},end:function(pt,sm,e){var world=sm.solar.currentWorld;if(world.moveWorker){world.moveWoker(world.moveWorker,world.moveWorker.parent);var i=world.lands.length;while(i--){var land=world.lands[i],pos=land.pos;if(pt.overlap(pos.x,pos.y,pos.w,pos.h)){if(land.workers.length+1>land.maxWorkers){break}world.moveWoker(world.moveWorker,land);break}}var pos=world.freeWorkers.pos;if(pt.overlap(pos.x,pos.y,pos.w,pos.h)){if(!(world.freeWorkers.length+1>world.freeWorkers.maxWorkers)){world.moveWoker(world.moveWorker,world.freeWorkers)}}}world.moveWorker=null}}});sm.start();
