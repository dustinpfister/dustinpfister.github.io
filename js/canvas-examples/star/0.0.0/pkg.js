/*
   canvas-example-star
   Copyright 2020 by Dustin Pfister
   https://raw.githubusercontent.com/dustinpfister/canvas-examples/master/LICENSE
 
   https://github.com/dustinpfister/canvas-examples
*/
var utils={};utils.distance=function(x1,y1,x2,y2){return Math.sqrt(Math.pow(x1-x2,2)+Math.pow(y1-y2,2))};utils.mod=function(x,m){return(x%m+m)%m};utils.createCanvas=function(opt){opt=opt||{};opt.container=opt.container||document.getElementById("canvas-app")||document.body;opt.canvas=document.createElement("canvas");opt.ctx=opt.canvas.getContext("2d");opt.canvas.className="canvas_example";opt.canvas.width=opt.width===undefined?320:opt.width;opt.canvas.height=opt.height===undefined?240:opt.height;opt.ctx.translate(.5,.5);opt.canvas.onselectstart=function(){return false};opt.canvas.style.imageRendering="pixelated";opt.ctx.imageSmoothingEnabled=false;opt.container.appendChild(opt.canvas);return opt};utils.getCanvasRelative=function(e){var canvas=e.target,bx=canvas.getBoundingClientRect(),pos={x:(e.changedTouches?e.changedTouches[0].clientX:e.clientX)-bx.left,y:(e.changedTouches?e.changedTouches[0].clientY:e.clientY)-bx.top,bx:bx};pos.x=Math.floor(pos.x/canvas.scrollWidth*canvas.width);pos.y=Math.floor(pos.y/canvas.scrollHeight*canvas.height);e.preventDefault();return pos};var starMod=function(){var getPoint=function(radian,radius,ox,oy){return{x:Math.cos(radian)*radius+ox,y:Math.sin(radian)*radius+oy}};var parseOptions=function(opt){opt=opt||{};opt.pointCount=opt.pointCount||5;opt.radius=opt.radius===undefined?50:opt.radius;opt.radiusInner=opt.radiusInner===undefined?25:opt.radiusInner;opt.radianAjust=opt.radianAjust===undefined?0:opt.radianAjust;opt.ox=opt.ox||0;opt.oy=opt.oy||0;opt.pointSkip=opt.pointSkip||2;return opt};return{create1:function(opt){opt=parseOptions(opt);var i=0,pt,r,rd=Math.PI*2/opt.pointCount,points=[];while(i<opt.pointCount){pt=getPoint(rd*i+opt.radianAjust,opt.radius,opt.ox,opt.oy);points.push(pt.x,pt.y);pt=getPoint(rd*i+rd/2+opt.radianAjust,opt.radiusInner,opt.ox,opt.oy);points.push(pt.x,pt.y);i+=1}return points},create2:function(opt){opt=parseOptions(opt);var i=0,pt,r,rd=Math.PI*2/opt.pointCount*opt.pointSkip,points=[];while(i<opt.pointCount){pt=getPoint(rd*i+opt.radianAjust,opt.radius,opt.ox,opt.oy);points.push(pt.x,pt.y);i+=1}return points}}}();var pool=function(){var api={};var colors=["blue","red","white","green","lime","orange"];var setColor=function(state,obj){obj.color=colors[Math.floor(Math.random()*colors.length)]};var setAlpha=function(state,obj){obj.alpha=1-obj.d/state.maxDist};var setDistance=function(state,obj){var cx=state.canvas.width/2,cy=state.canvas.height/2;obj.d=utils.distance(obj.x,obj.y,cx,cy)};var bounds=function(state,obj){var cx=state.canvas.width/2,cy=state.canvas.height/2;if(obj.d>state.maxDist){var a=Math.atan(cy-obj.y,cx-obj.x);obj.x=cx+Math.cos(a)*(state.maxDist-10);obj.y=cy+Math.sin(a)*(state.maxDist-10);setDistance(state,obj)}};api.update=function(state,secs){var i=state.pool.length,cx=state.canvas.width/2,cy=state.canvas.height/2,obj;while(i--){obj=state.pool[i];obj.x+=Math.cos(obj.heading)*obj.pps*secs;obj.y+=Math.sin(obj.heading)*obj.pps*secs;setDistance(state,obj);bounds(state,obj);setAlpha(state,obj);obj.facing+=obj.facingDelta*secs;obj.facing=utils.mod(obj.facing,Math.PI*2);obj.points=starMod.create1({pointCount:obj.pointCount,radius:obj.r1,radiusInner:obj.r2,radianAjust:obj.heading})}};api.createState=function(opt){opt=opt||{};var state={ver:"0.0.0",maxDist:opt.maxDist||50,canvas:opt.canvas,pool:[]};var i=0,star,len=opt.count||10;while(i<len){star={x:Math.random()*canvas.width,y:Math.random()*canvas.height,pointCount:5+Math.round(5*Math.random()),r1:30+Math.round(20*Math.random()),r2:10+Math.round(10*Math.random()),heading:Math.PI*2*Math.random(),facing:0,facingDelta:-1+2*Math.random(),pps:16+64*Math.random(),alpha:1,color:"blue",points:[]};setColor(state,star);state.pool.push(star);pool.update(state,0);i+=1}return state};return api}();var draw=function(){var radianToDegree=function(radian){return Math.floor(radian/(Math.PI*2)*360)};var strokeDirHelper=function(ctx,obj,dir,radiusBegin,radiusEnd){radiusBegin=radiusBegin===undefined?obj.r2:radiusBegin;radiusEnd=radiusEnd===undefined?obj.r1:radiusEnd;ctx.beginPath();ctx.moveTo(obj.x+Math.cos(dir)*radiusBegin,obj.y+Math.sin(dir)*radiusBegin);ctx.lineTo(obj.x+Math.cos(dir)*radiusEnd,obj.y+Math.sin(dir)*radiusEnd);ctx.stroke()};var drawStarInfo=function(ctx,obj){ctx.fillStyle="rgba(128,128,128,0.2)";ctx.font="10px arial";ctx.textBaseline="top";ctx.textAlign="left";ctx.fillText("pos: "+Math.floor(obj.x)+", "+Math.floor(obj.y),obj.x+10,obj.y+10);ctx.fillText("pps: "+Math.floor(obj.pps),obj.x+10,obj.y+20);ctx.fillText("heading: "+radianToDegree(obj.heading),obj.x+10,obj.y+30);ctx.fillText("facing: "+radianToDegree(obj.facing),obj.x+10,obj.y+40)};var api={};api.background=function(ctx,canvas){ctx.fillStyle="black";ctx.fillRect(0,0,canvas.width,canvas.height)};api.star=function(ctx,obj){ctx.fillStyle=obj.color||"green";ctx.strokeStyle="white";ctx.lineWidth=6;ctx.globalAlpha=obj.alpha;ctx.save();ctx.translate(obj.x,obj.y);ctx.rotate(obj.facing);api.points(ctx,obj.points,0,0);ctx.restore();ctx.lineWidth=2;ctx.strokeStyle="rgba(255,255,255,0.4)";strokeDirHelper(ctx,obj,obj.heading,obj.r1*.5,obj.r1);strokeDirHelper(ctx,obj,obj.facing,0,obj.r1*.5);ctx.globalAlpha=1;drawStarInfo(ctx,obj)};api.points=function(ctx,points,cx,cy){cx=cx===undefined?0:cx;cy=cy===undefined?0:cy;ctx.save();ctx.translate(cx,cy);var i=2,len=points.length;ctx.beginPath();ctx.moveTo(points[0],points[1]);while(i<len){ctx.lineTo(points[i],points[i+1]);i+=2}ctx.closePath();ctx.stroke();ctx.fill();ctx.restore()};api.ver=function(ctx,state){ctx.fillStyle="white";ctx.font="10px arial";ctx.textBaseline="top";ctx.textAlign="left";ctx.fillText("v"+state.ver,5,state.canvas.height-15)};return api}();var canvasObj=utils.createCanvas({width:640,height:480}),canvas=canvasObj.canvas,ctx=canvasObj.ctx;var state=pool.createState({count:15,maxDist:250,canvas:canvas}),lt=new Date;var loop=function(){var now=new Date,t=now-lt,secs=t/1e3;requestAnimationFrame(loop);draw.background(ctx,canvas);state.pool.forEach(function(obj){draw.star(ctx,obj)});draw.ver(ctx,state);pool.update(state,secs);lt=now};loop();
