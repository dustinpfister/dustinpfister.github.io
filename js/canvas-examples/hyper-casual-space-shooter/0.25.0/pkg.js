/*
   canvas-example-hyper-casual-space-shooter by Dustin Pfister
*/
var utils={};utils.format_money=function(number){var formatter=new Intl.NumberFormat("en-US",{style:"currency",currency:"USD",minimumFractionDigits:0,maximumFractionDigits:2});return formatter.format(number)};utils.mod=function(x,m){return(x%m+m)%m};utils.getCanvasRelative=function(e){var canvas=e.target,bx=canvas.getBoundingClientRect();return{x:(e.changedTouches?e.changedTouches[0].clientX:e.clientX)-bx.left,y:(e.changedTouches?e.changedTouches[0].clientY:e.clientY)-bx.top,bx:bx}};utils.distance=function(x1,y1,x2,y2){return Math.sqrt(Math.pow(x1-x2,2)+Math.pow(y1-y2,2))};utils.boundingBox=function(x1,y1,w1,h1,x2,y2,w2,h2){return!(y1+h1<y2||y1>y2+h2||x1+w1<x2||x1>x2+w2)};utils.wrapRadian=function(radian){return utils.mod(radian,Math.PI*2)};utils.angleTo=function(toX,toY,fromX,fromY){return utils.wrapRadian(Math.atan2(fromY-toY,fromX-toX)+Math.PI)};utils.normalizeHalf=function(n,scale){var c=scale||Math.PI*2;var h=c/2;return utils.mod(n+h,c)-h};utils.shortestDirection=function(from,to,scale){var z=from-to;if(from===to){return 0}else if(utils.normalizeHalf(z,scale)<0){return-1}else{return+1}};utils.deepClone=function(obj){var clone={};for(var i in obj){if(typeof obj[i]=="object"&&obj[i]!=null){clone[i]=utils.deepClone(obj[i]);if(obj[i].constructor.name==="Array"){clone[i].length=Object.keys(clone[i]).length;clone[i]=Array.from(clone[i])}}else{clone[i]=obj[i]}}return clone};utils.clampPer=function(per){if(per>1){return 1}if(per<0){return 0}return per};utils.per=function(a,d,mode){mode=mode===undefined?"per":mode;if(mode==="per"){return utils.clampPer(a/d)}return a*d};utils.log1=function(a,d,mode){var per;if(mode==="per"){per=utils.per(a,d,"per");return utils.clampPer(Math.log(1+per)/Math.log(2))}per=a;return(Math.pow(2,1+per)/2-1)*d};utils.log2=function(a,d,mode,basePer,maxPer){basePer=basePer===undefined?.25:basePer;maxPer=maxPer===undefined?.75:maxPer;var logPer=utils.log1(a,d,"per"),range=maxPer-basePer,per=basePer+range*logPer;if(mode==="per"){return utils.clampPer(per)}return 0};utils.log3=function(a,d,mode,p1){mode=mode===undefined?"per":mode;p1=p1===undefined?12:p1;if(mode==="per"){var n=a;var per=utils.per(n,d,"per");return Math.log(1+per)/Math.log(2+p1)}var per=a;var base=2+p1;return(Math.pow(base,1+per)/base-1)*d};utils.xp=function(){var xpAPI={};xpAPI.createOptions=function(opt){opt=opt||{};return{levelCap:opt.levelCap||100,expCap:opt.expCap||1e3,perMethod:opt.perMethod||"log1",perArgs:opt.perArgs||[0],tableWidth:opt.tableWidth||25,tableHeight:opt.tableHeight||25,tableX:opt.tableX===undefined?0:opt.tableX,tableY:opt.tableY===undefined?0:opt.tableY}};var createLevelObject=function(xp,opt){xp=xp>=opt.expCap?opt.expCap:xp;xp=xp<0?0:xp;var l=utils[opt.perMethod].apply(null,[xp/opt.expCap,opt.levelCap,"n"].concat(opt.perArgs));l=l>=opt.levelCap?opt.levelCap-1:l;l=l<0?0:l;return{opt:opt,l:l,level:Math.round(l)+1,levelCap:opt.levelCap,perToLevelCap:l/(opt.levelCap-1),xp:xp,xpForNext:null,expCap:opt.expCap,valueOf:function(){return this.level}}};var getXPByLevel=function(l,opt){var per=utils[opt.perMethod].apply(null,[l,opt.levelCap,"per"].concat(opt.perArgs));return opt.expCap*per};var appendXPForNext=function(levelObj){if(levelObj.level<levelObj.levelCap){levelObj.xpForNext=getXPByLevel(levelObj.level,levelObj.opt)}else{levelObj.xpForNext=Infinity}};xpAPI.byLevel=function(l,opt){opt=xpAPI.createOptions(opt);l=l>=opt.levelCap?opt.levelCap-1:l;l=l<0?0:l;var per=utils[opt.perMethod].apply(null,[l,opt.levelCap,"per"].concat(opt.perArgs));var levelObj=createLevelObject(opt.expCap*per,opt);appendXPForNext(levelObj);return levelObj};xpAPI.byExp=function(xp,opt){opt=xpAPI.createOptions(opt);var levelObj=createLevelObject(xp,opt);appendXPForNext(levelObj);return levelObj};xpAPI.createTable=function(opt){opt=xpAPI.createOptions(opt);var l=0,levelObj,table={levelObjArray:[],points:[],w:opt.tableWidth,h:opt.tableHeight,x:opt.tableX,y:opt.tableY};while(l<opt.levelCap){levelObj=table.levelObjArray[l]=xpAPI.byLevel(l,opt);table.points[l]={x:table.w/(opt.levelCap-1)*levelObj.l,y:table.h-levelObj.xp/levelObj.expCap*table.h};l+=1}return table};xpAPI.createUpgrade=function(desc,levelIndex,applyToState,opt){opt=xpAPI.createOptions(opt);var upgrade=xpAPI.createTable(opt);upgrade.opt=opt;upgrade.desc=desc||"";upgrade.levelIndex=levelIndex||0;upgrade.levelObj=upgrade.levelObjArray[upgrade.levelIndex];upgrade.applyToState=applyToState||function(){};return upgrade};return xpAPI}();var poolMod=function(){var api={};var OBJECT_TYPES={block:{spawn:function(block,pool,state,opt){block.effects=[];block.effectStats={};block.awardBlockMoney=false;block.armor={minDam:0}},update:function(obj,pool,state,secs){if(obj.effects.length>0){Effects.update(obj,pool,state,secs)}}}};var EFFECTS_MAX=10;var EFFECT_TYPES=api.EFFECT_TYPES={burn:{effectType:"burn",chance:.1,maxStack:3,damagePer:.01,every:1,count:5,upStat:{maxStack:{min:1,max:10,round:"floor"},chance:{min:.1,max:.75},damagePer:{min:.01,max:.1}}},acid:{effectType:"acid",chance:.1,maxStack:3,damageMulti:1,upStat:{maxStack:{min:1,max:5,round:"floor"},chance:{min:.1,max:.75},damageMulti:{min:1.5,max:4}}}};var overTimeEffect=function(i,effect,obj,secs){effect.secs+=secs;if(effect.secs>=effect.every){effect.secs=utils.mod(effect.secs,effect.every);if(effect.damagePer){var damage=obj.hp.max*effect.damagePer;obj.hp.current-=damage}effect.count-=1;if(effect.count<=0){obj.effects.splice(i,1)}}};var Effects={create:function(obj,effectObj){effectObj=effectObj||{};if(obj.effects.length<EFFECTS_MAX){obj.awardBlockMoney=true;effectObj=utils.deepClone(effectObj);effectObj.secs=0;obj.effects.push(effectObj)}},update:function(obj,pool,state,secs){var i=obj.effects.length,effect;if(obj.effects.length===0){obj.awardBlockMoney=false}while(i--){effect=obj.effects[i];if(effect.effectType==="burn"){overTimeEffect(i,effect,obj,secs)}obj.hp.current=obj.hp.current>obj.hp.max?obj.hp.max:obj.hp.current;obj.hp.current=obj.hp.current<0?0:obj.hp.current;obj.hp.per=obj.hp.current/obj.hp.max}},onAttack:function(obj,damage){var i=obj.effects.length,effect;while(i--){effect=obj.effects[i];if(effect.effectType==="acid"){var extraDamage=effect.damageMulti*damage;obj.hp.current-=extraDamage}obj.hp.current=obj.hp.current>obj.hp.max?obj.hp.max:obj.hp.current;obj.hp.current=obj.hp.current<0?0:obj.hp.current;obj.hp.per=obj.hp.current/obj.hp.max}}};var getInactive=function(pool){var i=pool.objects.length,obj;while(i--){obj=pool.objects[i];if(!obj.active){return obj}}return false};api.applyOnAttackEffects=function(obj,damage){Effects.onAttack(obj,damage)};api.createDisplayObject=function(opt){var obj={type:opt.type||"",active:false,i:opt.i===undefined?null:opt.i,x:opt.x===undefined?0:opt.x,y:opt.y===undefined?0:opt.y,r:opt.r===undefined?16:opt.r,radian:opt.radian===undefined?0:opt.radian,pps:opt.pps===undefined?32:opt.pps,lifespan:opt.lifespan||3,fillStyle:opt.fillStyle||"red",data:{}};return obj};api.parseEffectObject=function(effectSource){var effect;if(typeof effectSource==="string"){effect={effectType:effectSource}}else{effect=utils.deepClone(effectSource);effect.effectType=effect.effectType||"burn"}var effectData=EFFECT_TYPES[effect.effectType];Object.keys(effectData).forEach(function(key){effect[key]=effect[key]===undefined?effectData[key]:effect[key]});effect.secs=0;return effect};api.createEffect=function(obj,opt){var stackCount=obj.effectStats[opt.effectType]||0;if(stackCount<opt.maxStack){Effects.create(obj,opt)}};api.getEffectStats=function(obj){var stats={};obj.effects.forEach(function(effect){stats[effect.effectType]=stats[effect.effectType]===undefined?1:stats[effect.effectType]+=1});return stats};api.create=function(opt){opt=opt||{};opt.count=opt.count||10;opt.type=opt.type||"";var i=0,spawn=opt.spawn||function(obj,pool,state,opt){},update=opt.update||function(obj,pool,state,secs){},pool={type:opt.type,objects:[],data:opt.data||{},spawn:function(obj,pool,state,opt){if(pool.type in OBJECT_TYPES){OBJECT_TYPES[pool.type].spawn(obj,pool,state,opt)}spawn(obj,pool,state,opt)},purge:opt.purge||function(obj,pool,state){},update:function(obj,pool,state,opt){if(pool.type in OBJECT_TYPES){OBJECT_TYPES[obj.type].update(obj,pool,state,opt)}update(obj,pool,state,opt)}};while(i<opt.count){pool.objects.push(api.createDisplayObject(opt));i+=1}return pool};api.spawn=function(pool,state,opt){var obj=getInactive(pool);state=state||{};opt=opt||{};if(obj){if(!obj.active){obj.active=true;pool.spawn.call(pool,obj,pool,state,opt);return obj}}return false};api.update=function(pool,secs,state){var i=pool.objects.length,obj;state=state||{};while(i--){obj=pool.objects[i];if(obj.active){pool.update.call(pool,obj,pool,state,secs);obj.lifespan-=secs;obj.lifespan=obj.lifespan<0?0:obj.lifespan;if(obj.lifespan===0){obj.active=false;pool.purge.call(pool,obj,pool,state)}}}};api.getAllActive=function(pool,activeState){activeState=activeState===undefined?true:activeState;return pool.objects.filter(function(object){return object.active===activeState})};api.setActiveStateForAll=function(pool,bool){bool=bool===undefined?false:bool;var i=pool.objects.length,obj;while(i--){obj=pool.objects[i];obj.active=bool}};return api}();var gameMod=function(){var GAME_MONEY_START=0,GAME_UPDATE_MAX_SECS=.8,MONEY_PERLOSS_ON_DEATH=.1,BLOCK_COUNT=40,BLOCK_POS_MAX_DIST=1500,BLOCK_SPAWN_DIST=250,BLOCK_SPAWN_COUNT_PER_DIST_MIN=3,BLOCK_POS_SLOT_DIST=15,BLOCK_HP_MIN=10,BLOCK_HP_MAX=1e3,BLOCK_MONEY_BASE=1,BLOCK_MONEY_DIST=999,BLOCK_ARMOR_MINDAM_MIN=0,BLOCK_ARMOR_MINDAM_MAX=45,SHIP_AUTOFIRE=true,SHIP_HP=100,SHIP_AUTOHEAL_ENABLED=true,SHIP_AUTOHEAL_RATE=3,SHIP_AUTOHEAL_AMOUNT=1,SHIP_ROTATION_RATE_MIN=45,SHIP_ROTATION_RATE_MAX=180,SHIP_MAX_SPEED_START=128,SHIP_MAX_SPEED_MAX=1024,SHIP_ACC_START=64,SHIP_ACC_MAX=256,MAP_MAX_DIST=2.5*Math.pow(10,5),ENERGY_MAX=100,ENERGY_AUTOHEAL_COST=3,BASE_DIST=100;var WEAPONS={0:{name:"Pulse Gun",firesPerSecond:{min:2,max:10,levelOpt:{levelCap:10,expCap:1e3,perMethod:"log1",perArgs:[],tableX:160-12,tableY:120-12-30}},shotDamage:{min:.25,max:Math.floor(BLOCK_HP_MAX*.05),levelOpt:{levelCap:10,expCap:1500,perMethod:"log1",perArgs:[],tableX:160-12,tableY:120-12}},effects:["burn","acid"],shotRange:128,shotPPS:96,shotsPerFire:[2,2,1],onFireStart:function(game,secs,state){var weapon=game.weapons[game.ship.weaponIndex];var shotIndex=0;var radianStart=state.game.map.radian;var shotsPerFire=weapon.shotsPerFire[weapon.shotsPerFireIndex];while(shotIndex<shotsPerFire){var side=shotIndex%2===0?-1:1;var dist=8;if(shotsPerFire===1){dist=0}poolMod.spawn(game.shots,state,{radian:radianStart,x:Math.sin(Math.PI-radianStart)*dist*side,y:Math.cos(Math.PI+radianStart)*dist*side});shotIndex+=1}}},1:{name:"Cannon",firesPerSecond:{min:4,max:10,levelOpt:{levelCap:10,expCap:15e3,perMethod:"log1",perArgs:[],tableX:160-12,tableY:120-12-30}},shotDamage:{min:Math.floor(BLOCK_HP_MAX*.05),max:Math.floor(BLOCK_HP_MAX*.1),levelOpt:{levelCap:10,expCap:5e4,perMethod:"log1",perArgs:[],tableX:160-12,tableY:120-12}},effects:["burn","acid"],shotRange:256,shotsPerFire:[3,2],onFireStart:function(game,secs,state){var weapon=game.weapons[game.ship.weaponIndex];var shotIndex=0;var radianStart=state.game.map.radian-Math.PI/180*20;while(shotIndex<weapon.shotsPerFire[weapon.shotsPerFireIndex]){var shotPer=shotIndex/(weapon.shotsPerFire[weapon.shotsPerFireIndex]-1);var radianDelta=Math.PI/180*40*shotPer;poolMod.spawn(game.shots,state,{radian:radianStart+radianDelta});shotIndex+=1}}},2:{name:"Atom",firesPerSecond:{min:1,max:5,levelOpt:{levelCap:10,expCap:25e3,perMethod:"log1",perArgs:[],tableX:160-12,tableY:120-12-30}},shotDamage:{min:Math.floor(BLOCK_HP_MAX*.1),max:Math.floor(BLOCK_HP_MAX*.25),levelOpt:{levelCap:10,expCap:3e4,perMethod:"log1",perArgs:[],tableX:160-12,tableY:120-12}},effects:["acid"],shotRange:64,shotsPerFire:[1]}};var create_DEFAULT_WEAPONS=function(){return Object.keys(WEAPONS).map(function(weaponKey){var weaponDATA=WEAPONS[weaponKey];return{name:weaponDATA.name,firesPerSecond:weaponDATA.firesPerSecond.min,shotDamage:weaponDATA.shotDamage.min,shotRange:weaponDATA.shotRange||64,shotsPerFire:weaponDATA.shotsPerFire||[1],onFireStart:weaponDATA.onFireStart||function(game,secs,state){poolMod.spawn(game.shots,state,{radian:state.game.map.radian})},shotPPS:weaponDATA.shotPPS||128,shotsPerFireIndex:0,effects:weaponDATA.effects||[]}})};var DEFAULT_WEAPONS=create_DEFAULT_WEAPONS();var SPACE_BUTTONS={main:{0:{desc:"Auto Fire",x:130,y:40,r:10,onClick:function(game){console.log("click auto fire");game.autoFire=!game.autoFire}}}};var BASE_BUTTONS={main:{0:{desc:"Weapons",x:64,y:-32,r:16,onClick:function(game){game.buttons.currentPage="weapons"}},1:{desc:"Ship",x:64,y:32,r:16,onClick:function(game){game.buttons.currentPage="ship"}},2:{desc:"Effects",x:96+8,y:-32,r:16,onClick:function(game){game.buttons.currentPage="effects"}}},weapons:{0:{desc:"Back",x:64,y:0,r:16,onClick:function(game){game.buttons.currentPage="main"}},1:{desc:"Change Weapon",x:64,y:32,r:16,onClick:function(game){game.ship.weaponIndex+=1;game.ship.weaponIndex=utils.mod(game.ship.weaponIndex,Object.keys(game.weapons).length);game.ship.weapon=game.weapons[game.ship.weaponIndex];updateButtons(game)}},2:{desc:"Fires Per Second",x:-64,y:-32,r:16,cost:0,type:"weaponUpgrade",weaponProp:"firesPerSecond",onClick:function(game,button){var upgradeID="w-"+game.ship.weaponIndex+"-firesPerSecond",upgrade=getUpgradeById(game,upgradeID);buyUpgrade(game,upgrade);button.cost=upgrade.levelObj.xpForNext}},3:{desc:"Damage",x:-64,y:0,r:16,cost:0,type:"weaponUpgrade",weaponProp:"shotDamage",onClick:function(game,button){var upgradeID="w-"+game.ship.weaponIndex+"-shotDamage",upgrade=getUpgradeById(game,upgradeID);buyUpgrade(game,upgrade);button.cost=upgrade.levelObj.xpForNext}}},ship:{0:{desc:"Back",x:64,y:0,r:16,onClick:function(game){game.buttons.currentPage="main"}},1:{desc:"Max Speed",x:64,y:-32,r:16,cost:0,upgradeID:"s1",onClick:function(game,button){var upgrade=button.upgrade;buyUpgrade(game,upgrade);button.cost=upgrade.levelObj.xpForNext}},2:{desc:"Max Acc",x:64,y:32,r:16,cost:0,upgradeID:"s2",onClick:function(game,button){var upgrade=button.upgrade;buyUpgrade(game,upgrade);button.cost=upgrade.levelObj.xpForNext}},3:{desc:"Rotation",x:64,y:64,r:16,cost:0,upgradeID:"s3",onClick:function(game,button){var upgrade=button.upgrade;buyUpgrade(game,upgrade);button.cost=upgrade.levelObj.xpForNext}}},effects:{0:{desc:"Back",x:64,y:0,r:16,onClick:function(game){game.buttons.currentPage="main"}},1:{desc:"Burn",type:"effectUpgrade",effectType:"burn",x:64,y:32,r:16,cost:0,onClick:function(game,button){var upgrade=button.upgrade;buyUpgrade(game,upgrade);button.cost=upgrade.levelObj.xpForNext}},2:{desc:"ACID",type:"effectUpgrade",effectType:"acid",x:64,y:-32,r:16,cost:0,onClick:function(game,button){var upgrade=button.upgrade;buyUpgrade(game,upgrade);button.cost=upgrade.levelObj.xpForNext}}}};var updateButtons=function(game){["base"].forEach(function(mode){Object.keys(game.buttons[mode]).forEach(function(pageKey){Object.keys(game.buttons[mode][pageKey]).forEach(function(buttonKey){var button=game.buttons[mode][pageKey][buttonKey];if(button.upgradeID){button.upgrade=getUpgradeById(game,button.upgradeID)}if(button.type){if(button.type==="weaponUpgrade"){var upgradeID="w-"+game.ship.weaponIndex+"-"+button.weaponProp;button.upgrade=getUpgradeById(game,upgradeID)}if(button.type==="effectUpgrade"){var upgradeID="e-"+button.effectType;button.upgrade=getUpgradeById(game,upgradeID)}}if(button.upgrade&&button.cost!=undefined){button.cost=button.upgrade.levelObj.xpForNext}})})})};var DEFAULT_UPGRADES=[{id:"s1",desc:"Max Speed",applyToState:function(game,levelObj,upgrade){var delta=SHIP_MAX_SPEED_MAX-SHIP_MAX_SPEED_START;game.map.maxPPS=SHIP_MAX_SPEED_START+delta*levelObj.perToLevelCap},levelOpt:{levelCap:10,expCap:1e4,perMethod:"log1",perArgs:[],tableX:260,tableY:120-12-32}},{id:"s2",desc:"Ship Acceleration",applyToState:function(game,levelObj,upgrade){var delta=SHIP_ACC_MAX-SHIP_ACC_START;game.map.ppsDelta=SHIP_ACC_START+delta*levelObj.perToLevelCap},levelOpt:{levelCap:10,expCap:7500,perMethod:"log1",perArgs:[],tableX:260,tableY:120-12+32}},{id:"s3",desc:"Rotation",applyToState:function(game,levelObj,upgrade){var delta=SHIP_ROTATION_RATE_MAX-SHIP_ROTATION_RATE_MIN;game.map.degreesPerSecond=SHIP_ROTATION_RATE_MIN+delta*levelObj.perToLevelCap},levelOpt:{levelCap:10,expCap:5e3,perMethod:"log1",perArgs:[],tableX:260,tableY:120-12+64}}];var append_WEAPON_UPGRADES=function(){Object.keys(WEAPONS).forEach(function(weaponKey){var weapon=WEAPONS[weaponKey];["firesPerSecond","shotDamage"].forEach(function(weaponProp){levelOpt=utils.deepClone(weapon[weaponProp].levelOpt||{});levelOpt.levelCap=levelOpt.levelCap||30;levelOpt.expCap=levelOpt.expCap||1e4;levelOpt.perArgs=levelOpt.perArgs||[0];var upgrade={id:"w-"+weaponKey+"-"+weaponProp,desc:weapon.name+" "+weaponProp,applyToState:function(game,levelObj,upgrade){var weaponIndex=Number(upgrade.id.split("-")[1]),weapon=game.weapons[weaponIndex],weaponDATA=WEAPONS[weaponIndex],weaponProp=upgrade.id.split("-")[2];var delta=weaponDATA[weaponProp].max-weaponDATA[weaponProp].min;weapon[weaponProp]=weaponDATA[weaponProp].min+delta*levelObj.perToLevelCap},levelOpt:levelOpt};DEFAULT_UPGRADES.push(upgrade)})})};var append_EFFECT_UPGRADES=function(){Object.keys(poolMod.EFFECT_TYPES).forEach(function(key){var effectDATA=poolMod.EFFECT_TYPES[key];DEFAULT_UPGRADES.push({id:"e-"+key,desc:key,applyToState:function(game,levelObj,upgrade){var effect=game.effects[upgrade.id.split("-")[1]];Object.keys(effect.upStat).forEach(function(effectKey){var upStat=effect.upStat[effectKey];var delta=(upStat.max-upStat.min)*levelObj.perToLevelCap;effect[effectKey]=upStat.min+delta;if(upStat.round){effect[effectKey]=Math[upStat.round](effect[effectKey])}})},levelOpt:utils.deepClone({levelCap:10,expCap:5e4,perMethod:"log1"})})})};append_WEAPON_UPGRADES();append_EFFECT_UPGRADES();var getUpgradeById=function(game,id){var i=game.upgrades.length;while(i--){var upgrade=game.upgrades[i];if(id===upgrade.id){return upgrade}}return false};var buyUpgrade=function(game,upgrade){var lvCurrent=upgrade.levelObj,lvNext;if(lvCurrent.level<upgrade.opt.levelCap){lvNext=upgrade.levelObjArray[lvCurrent.level];if(game.money>=lvNext.xp){upgrade.levelIndex=lvNext.level-1;upgrade.levelObj=lvNext;game.money-=lvNext.xp;upgrade.applyToState(game,upgrade.levelObj,upgrade)}else{}}else{}};var api={};var createHPObject=function(maxHP){return{current:maxHP||100,max:maxHP||100,per:1,autoHeal:{enabled:false,rate:5,amount:-1,secs:0}}};var autoHealObject=function(obj,secs){if(obj.hp){if(obj.hp.autoHeal.enabled){obj.hp.autoHeal.secs+=secs;if(obj.hp.autoHeal.secs>=obj.hp.autoHeal.rate){obj.hp.current+=obj.hp.autoHeal.amount;obj.hp.current=obj.hp.current>obj.hp.max?obj.hp.max:obj.hp.current;obj.hp.current=obj.hp.current<0?0:obj.hp.current;obj.hp.per=obj.hp.current/obj.hp.max;obj.hp.autoHeal.secs=0}}else{obj.hp.autoHeal.secs=0}}};var onShipDeath=function(game){game.ship=createShip(game);game.map.x=0;game.map.y=0;game.map.pps=0;poolMod.getAllActive(game.blocks).forEach(function(block){block.active=false;block.lifespan=0});game.money=game.money>0?game.money*(1-MONEY_PERLOSS_ON_DEATH):0};var attackObject=function(game,target,attacker){if(target.hp){if(target.armor){if(attacker.damage<target.armor.minDam){attacker.damage=0}}if(target.type==="block"){poolMod.applyOnAttackEffects(target,attacker.damage);attacker.effects.forEach(function(effect){poolMod.createEffect(target,effect);target.effectStats=poolMod.getEffectStats(target)})}target.hp.current-=attacker.damage;target.hp.current=target.hp.current<0?0:target.hp.current;target.hp.per=target.hp.current/target.hp.max;if(target.hp.current===0&&target.type==="ship"){onShipDeath(game)}}};var createEnergyObject=function(){return{current:ENERGY_MAX*.5,max:ENERGY_MAX,per:0,rate:1,secs:0}};var clampEnergy=function(energy){energy.current=energy.current>energy.max?energy.max:energy.current;energy.current=energy.current<0?0:energy.current};var updateEnergy=function(game,secs){var energy=game.ship.energy;energy.per=energy.current/energy.max;energy.current+=energy.rate*secs;clampEnergy(energy)};var shotStyleHelper=function(shot){shot.fillStyle="rgba(255,255,255,0.2)";shot.r=2;if(shot.effects.length>0){var r=0,b=0,g=0;shot.effects.forEach(function(effect){if(effect.effectType==="burn"){r=255}if(effect.effectType==="acid"){b=255}});shot.fillStyle="rgb("+r+","+g+", "+b+")";shot.r=3}};var createShotsPool=function(){return poolMod.create({type:"shot",count:60,fillStyle:"white",r:2,spawn:function(shot,pool,state,opt){var weapon=state.game.ship.weapon,range=weapon.shotRange||32;shot.x=opt.x===undefined?0:opt.x;shot.y=opt.y===undefined?0:opt.y;shot.radian=opt.radian;shot.pps=weapon.shotPPS;shot.lifespan=1/shot.pps*range;shot.damage=weapon.shotDamage;shot.effects=[];weapon.effects.forEach(function(effectType){var effect=poolMod.parseEffectObject(state.game.effects[effectType]);var roll=Math.random();if(roll<effect.chance){shot.effects.push(effect)}});shotStyleHelper(shot)},update:function(shot,pool,state,secs){var objDeltaX=Math.cos(shot.radian)*shot.pps*secs;var objDeltaY=Math.sin(shot.radian)*shot.pps*secs;shot.x+=objDeltaX;shot.y+=objDeltaY;var blocks=poolMod.getAllActive(state.game.blocks,true);var i=blocks.length;while(i--){var block=blocks[i];var dist=utils.distance(shot.x,shot.y,block.x,block.y);if(dist<=block.r+shot.r){shot.lifespan=0;attackObject(state.game,block,shot);if(block.hp.current<=0){state.game.money+=block.money;block.lifespan=0;block.active=false}break}}}})};var getFreePositions=function(game,blockPool){var map=game.map,activeBlocks=poolMod.getAllActive(blockPool||game.blocks,true),xMapAjust=utils.mod(game.map.x,32),yMapAjust=utils.mod(game.map.y,32),spotX,spotY,blockIndex,block,free=[],gridH=10,gridW=10,slotDist=BLOCK_POS_SLOT_DIST,sx=Math.ceil(Math.cos(game.map.radian)*(gridH/2+slotDist)-gridW/2),sy=Math.ceil(Math.sin(game.map.radian)*(gridH/2+slotDist)-gridH/2),x=sx,y=sy;while(y<gridH+sy){x=sx;spotY=y*32-yMapAjust;loopx:while(x<gridW+sx){spotX=x*32-xMapAjust;blockIndex=activeBlocks.length;while(blockIndex--){block=activeBlocks[blockIndex];if(utils.distance(block.x,block.y,spotX,spotY)<=block.r){x+=1;continue loopx}}free.push({x:spotX,y:spotY});x+=1}y+=1}return free};var positionBlock=function(state,obj){var game=state.game;var freeSlots=getFreePositions(game);if(freeSlots.length===0){obj.active=false;obj.lifespan=0}else{var slot=freeSlots.splice(Math.floor(freeSlots.length*Math.random()),1)[0];obj.x=slot.x;obj.y=slot.y}};var getValueByMapDist=function(game,opt){opt=opt||{};opt.minVal=opt.minVal||0;opt.maxVal=opt.maxVal||1;opt.roundFunc=opt.roundFunc||Math.round;opt.perFunc=opt.perFunc||utils.log1;opt.perFuncArgs=opt.perFuncArgs||[];var per=game.map.per,delta=opt.maxVal-opt.minVal;if(opt.perFunc){per=opt.perFunc.apply(null,[per,1,"per"].concat(opt.perFuncArgs))}var result=opt.minVal+delta*per;if(opt.roundFunc){return opt.roundFunc(result)}return result};var createBlocksPool=function(){return poolMod.create({type:"block",data:{},fillStyle:"#1a1a1a",count:BLOCK_COUNT,spawn:function(obj,pool,state,opt){var game=state.game,map=game.map;positionBlock(state,obj);obj.radian=utils.wrapRadian(map.radian+Math.PI);obj.pps=map.pps;obj.lifespan=1;obj.hp=createHPObject(BLOCK_HP_MIN+Math.round(BLOCK_HP_MAX-BLOCK_HP_MIN)*map.per);obj.damage=getValueByMapDist(game,{minVal:1,maxVal:100,perFunc:utils.log1,roundFunc:Math.floor});obj.money=BLOCK_MONEY_BASE+Math.round(game.map.per*BLOCK_MONEY_DIST);obj.armor.minDam=getValueByMapDist(game,{minVal:BLOCK_ARMOR_MINDAM_MIN,maxVal:BLOCK_ARMOR_MINDAM_MAX,perFunc:utils.log1,roundFunc:Math.floor})},update:function(block,pool,state,secs){var game=state.game;var map=state.game.map;block.lifespan=1;block.radian=utils.wrapRadian(state.game.map.radian+Math.PI);block.pps=state.game.map.pps;var objDeltaX=Math.cos(block.radian)*block.pps*secs;var objDeltaY=Math.sin(block.radian)*block.pps*secs;block.x+=objDeltaX;block.y+=objDeltaY;block.data.dist=utils.distance(block.x,block.y,state.game.ship.x,state.game.ship.y);autoHealObject(block,secs);if(block.data.dist<=game.ship.r+block.r){attackObject(game,game.ship,block);block.lifespan=0}if(block.data.dist>=BLOCK_POS_MAX_DIST){block.lifespan=0}if(block.hp.current<=0){if(block.awardBlockMoney){game.money+=block.money}block.lifespan=0}block.effectStats=poolMod.getEffectStats(block)}})};var createShip=function(game){var ship={type:"ship",x:0,y:0,r:8,newShip:true,hp:createHPObject(SHIP_HP),energy:createEnergyObject(),fillStyle:"blue",weaponSecs:0,weaponIndex:0,weapon:game.weapons[0]};ship.hp.autoHeal.enabled=SHIP_AUTOHEAL_ENABLED;ship.hp.autoHeal.rate=SHIP_AUTOHEAL_RATE;ship.hp.autoHeal.amount=SHIP_AUTOHEAL_AMOUNT;return ship};api.create=function(opt){opt=opt||{};var game={money:opt.money===undefined?GAME_MONEY_START:opt.money,mode:"space",autoFire:SHIP_AUTOFIRE,weapons:utils.deepClone(DEFAULT_WEAPONS),effects:utils.deepClone(poolMod.EFFECT_TYPES),upgrades:[],ship:{},shots:createShotsPool(),blocks:createBlocksPool(),blockSpawn:{dist:0,lastPos:{x:0,y:0}},map:{x:opt.mapX===undefined?0:opt.mapX,y:opt.mapY===undefined?0:opt.mapY,degree:270,degreesPerSecond:SHIP_ROTATION_RATE_MIN,radian:0,aToOrigin:0,pps:0,ppsDelta:SHIP_ACC_START,maxPPS:SHIP_MAX_SPEED_START,dist:0,per:0},buttons:{currentPage:"main",base:utils.deepClone(BASE_BUTTONS),space:utils.deepClone(SPACE_BUTTONS)},baseObj:{fillStyle:"#282828",x:0,y:0,r:BASE_DIST}};game.ship=createShip(game);var upgradeIndices=opt.upgradeIndices||{s1:1};game.upgrades=DEFAULT_UPGRADES.map(function(upDef){var upgrade=utils.xp.createUpgrade(upDef.desc,0,upDef.applyToState,upDef.levelOpt);upgrade.id=upDef.id;upgrade.levelIndex=upgradeIndices[upgrade.id]||0;upgrade.levelObj=upgrade.levelObjArray[upgrade.levelIndex];if(upgrade.id=="s1"){console.log(upgrade.levelIndex);console.log(upgrade.levelObjArray[upgrade.levelIndex])}upgrade.applyToState(game,upgrade.levelObj,upgrade);return upgrade});updateButtons(game);return game};api.setMapMovement=function(game,degree,pps){game.map.radian=utils.wrapRadian(Math.PI/180*degree);game.map.pps=pps;game.map.pps=game.map.pps<0?0:game.map.pps;game.map.pps=game.map.pps>game.map.maxPPS?game.map.maxPPS:game.map.pps};var clampMapPos=function(map){if(map.dist>=MAP_MAX_DIST){var radian=utils.wrapRadian(map.radian+Math.PI);map.x=Math.cos(radian)*MAP_MAX_DIST;map.y=Math.sin(radian)*MAP_MAX_DIST}};var updateMap=function(game,secs){var map=game.map;map.x+=Math.cos(map.radian)*map.pps*secs;map.y+=Math.sin(map.radian)*map.pps*secs;map.dist=utils.distance(0,0,map.x,map.y);clampMapPos(map);map.per=game.map.dist/MAP_MAX_DIST;map.aToOrigin=utils.angleTo(0,0,map.x,map.y)};var updateBlocks=function(game,secs,state){var blockSpawn=game.blockSpawn,spawnIndex;if(game.mode==="space"){poolMod.update(game.blocks,secs,state);blockSpawn.dist=utils.distance(game.map.x,game.map.y,blockSpawn.lastPos.x,blockSpawn.lastPos.y);if(blockSpawn.dist>=BLOCK_SPAWN_DIST){blockSpawn.lastPos.x=game.map.x;blockSpawn.lastPos.y=game.map.y;spawnIndex=BLOCK_SPAWN_COUNT_PER_DIST_MIN;while(spawnIndex--){poolMod.spawn(game.blocks,state,{})}}}if(game.mode==="base"){poolMod.setActiveStateForAll(game.blocks,false)}};var updateShots=function(game,secs,state){var ship=game.ship,weapon=ship.weapon;if(game.mode==="space"){ship.weaponSecs+=secs;if(game.autoFire||state.input.fire){if(ship.weaponSecs>=1/weapon.firesPerSecond){weapon.onFireStart(game,secs,state);weapon.shotsPerFireIndex+=1;weapon.shotsPerFireIndex%=weapon.shotsPerFire.length;ship.weaponSecs=0}}}poolMod.update(game.shots,secs,state)};api.update=function(game,secs,state){secs=secs>GAME_UPDATE_MAX_SECS?GAME_UPDATE_MAX_SECS:secs;secs=secs<0?0:secs;game.baseObj.x=game.map.x*-1;game.baseObj.y=game.map.y*-1;updateMap(game,secs);if(game.map.dist>BASE_DIST&&game.mode==="base"){game.buttons.currentPage="main";game.mode="space"}if(game.map.dist<=BASE_DIST&&game.mode==="space"){poolMod.setActiveStateForAll(game.shots,false);poolMod.setActiveStateForAll(game.shots,false);game.buttons.currentPage="main";game.mode="base"}if(game.mode==="space"){updateBlocks(game,secs,state);updateShots(game,secs,state)}updateEnergy(game,secs);if(game.ship.hp.current<game.ship.hp.max&&game.ship.energy.current>ENERGY_AUTOHEAL_COST*secs){game.ship.energy.current-=ENERGY_AUTOHEAL_COST*secs;autoHealObject(game.ship,secs)}};var buttonCheck=function(button,pos){if(utils.distance(button.x,button.y,pos.x-160,pos.y-120)<=button.r){return true}return false};api.checkButtons=function(game,pos,e){var buttons_mode=game.buttons[game.mode],i;if(buttons_mode){i=Object.keys(buttons_mode[game.buttons.currentPage]).length;while(i--){button=buttons_mode[game.buttons.currentPage][i];if(buttonCheck(button,pos)){button.onClick(game,button,e);break}}}};api.updateButtons=updateButtons;return api}();var draw=function(){var TRANSLATE_TO={x:160,y:120};var GRIDLINES=[{cellSize:128,cellWidth:5,cellHeight:5,lineWidth:1,strokeStyle:"rgba(255,255,255,0.1)"},{cellSize:32,cellWidth:14,cellHeight:14,lineWidth:1,strokeStyle:"white"},{cellSize:16,cellWidth:28,cellHeight:28}][0];var baseObjectDraw=function(ctx,obj,render){ctx.save();ctx.translate(TRANSLATE_TO.x,TRANSLATE_TO.y);ctx.fillStyle=obj.fillStyle||"gray";ctx.strokeStyle=obj.strokeStyle||"white";ctx.beginPath();ctx.lineWidth=1;ctx.arc(obj.x,obj.y,obj.r,0,Math.PI*2);ctx.fill();ctx.stroke();if(render){render(ctx,obj)}ctx.restore();ctx.save();if(obj.hp){ctx.translate(TRANSLATE_TO.x,TRANSLATE_TO.y);drawHealthBar(ctx,obj)}ctx.restore()};var drawArrowToBase=function(ctx,game){baseObjectDraw(ctx,{x:Math.cos(game.map.aToOrigin)*32,y:Math.sin(game.map.aToOrigin)*32,r:5,fillStyle:"black"},function(ctx,obj){ctx.fillStyle="red",ctx.translate(obj.x,obj.y);ctx.rotate(game.map.aToOrigin);ctx.beginPath();ctx.moveTo(obj.r,0);ctx.lineTo(obj.r*-1,obj.r);ctx.lineTo(obj.r*-1,obj.r*-1);ctx.closePath();ctx.lineWidth=2;ctx.stroke();ctx.fill()})};var background=function(ctx,state,style){var canvas=state.canvas,map=state.game.map,r=Math.floor(map.per*255);ctx.fillStyle=style||"rgba("+r+",0,0,1)";ctx.fillRect(0,0,canvas.width,canvas.height)};var positionMap=function(ctx,state){var map=state.game.map;var minMap={x:20,y:-20,r:10,fillStyle:"rgba(255,0,0,0.2)"};baseObjectDraw(ctx,minMap,function(ctx,minMap){var radian=map.aToOrigin+Math.PI;var x=Math.cos(radian)*minMap.r*map.per,y=Math.sin(radian)*minMap.r*map.per;ctx.translate(minMap.x,minMap.y);ctx.beginPath();ctx.lineWidth=2;ctx.arc(x,y,1,0,Math.PI*2);ctx.stroke()})};var positionStatus=function(ctx,state){var game=state.game,map=game.map;ctx.fillStyle="yellow";ctx.textBaseline="top";ctx.textAlign="left";ctx.font="8px courier";var sx=160,sy=200;ctx.fillText("position status: ",sx,sy);ctx.fillText("pos: ("+Math.floor(map.x)+","+Math.floor(map.y)+")",sx,sy+8);ctx.fillText("dist: "+Math.floor(map.dist),sx,sy+16);ctx.fillText("per: "+Math.floor(map.per*100)+"%",sx,sy+24)};var effectsInfo=function(ctx,state){var game=state.game,weapon=game.ship.weapon;ctx.fillStyle="lime";ctx.textBaseline="top";ctx.textAlign="left";ctx.font="8px courier";var sx=25;weapon.effects.forEach(function(effectType,index){var sy=40+50*index,effect=game.effects[effectType];ctx.fillText(effect.effectType+":",sx,sy);ctx.fillText(" chance  : "+Math.round(effect.chance*100)+"%",sx,sy+8);ctx.fillText(" maxStack: "+effect.maxStack,sx,sy+16);if(effect.effectType==="burn"){ctx.fillText(" damage%: "+Math.round(effect.damagePer*100)+"%",sx,sy+24);ctx.fillText(" count "+effect.count,sx,sy+32)}if(effect.effectType==="acid"){ctx.fillText(" damage: "+effect.damageMulti.toFixed(2)+"X",sx,sy+24)}})};var statusBar=function(ctx,state){var game=state.game,ship=game.ship,map=game.map,weapon=game.ship.weapon,grad=ctx.createLinearGradient(0,0,0,20);grad.addColorStop(0,"#808080");grad.addColorStop(1,"rgba(0,0,255,0.07)");ctx.fillStyle=grad;ctx.fillRect(0,0,state.canvas.width,40);ctx.fillStyle="white";ctx.textBaseline="top";ctx.textAlign="left";ctx.font="10px courier";ctx.fillText(utils.format_money(game.money),220,5);ctx.font="8px courier";ctx.fillText("speed  : "+Math.floor(map.pps)+" / "+Math.floor(map.maxPPS),220,13);ctx.fillText("heading: "+map.degree.toFixed(2),220,20);ctx.font="10px courier";ctx.fillText(weapon.name,5,5);ctx.font="8px courier";ctx.fillText("Shot Damage:"+weapon.shotDamage.toFixed(2),5,13);ctx.fillText("Fires/sec  :"+weapon.firesPerSecond.toFixed(2),5,20);ctx.fillStyle="#2a2a2a";ctx.fillRect(160-50,5,100,15);ctx.fillStyle="#af0000";ctx.fillRect(160-50,5,100*ship.hp.per,15);ctx.fillStyle="white";ctx.textAlign="center";ctx.font="8px arial";ctx.fillText(ship.hp.current+" / "+ship.hp.max,160,9);ctx.fillStyle="#2a2a2a";ctx.fillRect(160-50,20,100,8);ctx.fillStyle="#afaf00";ctx.fillRect(160-50,20,100*ship.energy.per,8);ctx.fillStyle="white";ctx.textAlign="center";ctx.font="8px arial";ctx.fillText(Math.round(ship.energy.current)+" / "+ship.energy.max,160,20)};var drawHealthBar=function(ctx,obj){if(obj.hp){if(obj.hp.per<1){ctx.beginPath();ctx.rect(obj.x-obj.r,obj.y+obj.r-5,obj.r*2,5);ctx.fillStyle="rgba(120,120,120,0.7)";ctx.fill();ctx.beginPath();ctx.rect(obj.x-obj.r,obj.y+obj.r-5,obj.r*2*obj.hp.per,5);ctx.fillStyle="rgba(0,255,0,0.4)";ctx.fill()}}};var shots=function(ctx,state){var game=state.game;state.game.shots.objects.forEach(function(shot){if(shot.active){baseObjectDraw(ctx,shot,function(ctx,shot){ctx.fillStyle="yellow";ctx.textBaseline="middle";ctx.textAlign="center"})}})};var blocks=function(ctx,state){var game=state.game;state.game.blocks.objects.forEach(function(block){if(block.active){baseObjectDraw(ctx,block,function(ctx,block){ctx.fillStyle="yellow";ctx.textBaseline="middle";ctx.textAlign="center";ctx.font="9px arial";var effectsText=Object.keys(block.effectStats).map(function(effectType){return effectType+" "+block.effectStats[effectType]+"x"}).join(" : ");ctx.fillText(effectsText,block.x,block.y-9);ctx.fillText(Math.floor(block.hp.current)+"/"+Math.floor(block.hp.max),block.x,block.y);ctx.fillText(utils.format_money(block.money)+" ; "+"A"+block.armor.minDam+" ; "+"D"+block.damage,block.x,block.y+9)})}})};var ship=function(ctx,state){var game=state.game;ctx.fillStyle="rgba(0,0,255,0.2)";baseObjectDraw(ctx,game.ship,function(){var radian=game.map.radian;ctx.rotate(radian);ctx.strokeStyle="white";ctx.fillStyle="#0060ff";ctx.beginPath();ctx.moveTo(game.ship.r,0);ctx.lineTo(game.ship.r*-1,game.ship.r);ctx.lineTo(game.ship.r*-1,game.ship.r*-1);ctx.closePath();ctx.lineWidth=3;ctx.stroke();ctx.fill()})};var gridLines=function(ctx,state,style){var grid=GRIDLINES;var sx=grid.cellWidth*grid.cellSize/2*-1-state.game.map.x%grid.cellSize,sy=grid.cellHeight*grid.cellSize/2*-1+state.game.map.y%grid.cellSize*-1,x,y,len=grid.cellWidth*grid.cellHeight,i=0;ctx.strokeStyle=grid.strokeStyle||"red";ctx.lineWidth=grid.lineWidth||1;ctx.save();ctx.translate(TRANSLATE_TO.x,TRANSLATE_TO.y);while(i<len){x=sx+i%grid.cellWidth*grid.cellSize;y=sy+Math.floor(i/grid.cellWidth)*grid.cellSize;ctx.beginPath();ctx.rect(x,y,grid.cellSize,grid.cellSize);ctx.stroke();i+=1}ctx.restore()};var info=function(ctx,state){var game=state.game,ship=game.ship,w=ship.weapon,headCir=state.input.pointer.headCir,map=game.map;if(state.debug){background(ctx,state,"rgba(0,0,0,0.5)");ctx.fillStyle="yellow";ctx.font="10px arial";ctx.textBaseline="top";ctx.textAlign="left";var activeBlocks=poolMod.getAllActive(game.blocks),blockSpawn=game.blockSpawn;ctx.fillText("active blocks : "+activeBlocks.length,10,10);ctx.fillText("block spawn last pos : "+blockSpawn.lastPos.x+","+blockSpawn.lastPos.y,10,20);ctx.fillText("block spawn dist : "+blockSpawn.dist,10,30);ctx.fillText("map pos: "+Math.floor(map.x)+" , "+Math.floor(map.y),10,40)}};var ver=function(ctx,state){ctx.fillStyle="yellow";ctx.font="10px arial";ctx.textBaseline="top";ctx.textAlign="left";ctx.fillText("v"+state.ver,5,state.canvas.height-15)};var FPS=function(ctx,state){ctx.fillStyle="yellow";ctx.font="8px arial";ctx.textBaseline="top";ctx.textAlign="left";ctx.fillText("FPS: "+Math.floor(state.FPS),50,state.canvas.height-15)};var xpTable=function(ctx,table){ctx.beginPath();table.points.forEach(function(point,i){if(i===0){ctx.moveTo(table.x+point.x,table.y+point.y)}ctx.lineTo(table.x+point.x,table.y+point.y)});ctx.strokeStyle="green";ctx.stroke();ctx.strokeStyle="gray";ctx.beginPath();ctx.rect(table.x,table.y,table.w,table.h);ctx.stroke();if(table.levelIndex>=0){var point=table.points[table.levelIndex];ctx.strokeStyle="lime";ctx.beginPath();ctx.arc(table.x+point.x,table.y+point.y,2,0,Math.PI*2);ctx.stroke()}};var api={};api.currentMode=function(ctx,state){var game=state.game;background(ctx,state);gridLines(ctx,state,"rgba(255,255,255,0.1)");baseObjectDraw(ctx,game.baseObj,function(){});var buttons_mode=game.buttons[game.mode];if(buttons_mode){var buttons_page=buttons_mode[game.buttons.currentPage];Object.keys(buttons_page).forEach(function(key){baseObjectDraw(ctx,buttons_page[key],function(ctx,button){ctx.fillStyle="yellow";ctx.textAlign="center";ctx.textBaseline="middle";ctx.font="8px arial";ctx.fillText(button.desc,button.x,button.y);var cost=button.cost;if(cost!=undefined){ctx.fillText(utils.format_money(button.cost),button.x,button.y+10)}})})}if(game.mode==="base"){if(game.buttons.currentPage!="main"){}if(game.buttons.currentPage==="weapons"){var upgradeIndex=game.ship.weaponIndex*2+3;xpTable(ctx,game.upgrades[upgradeIndex]);xpTable(ctx,game.upgrades[upgradeIndex+1])}if(game.buttons.currentPage==="ship"){xpTable(ctx,game.upgrades[0]);xpTable(ctx,game.upgrades[1]);xpTable(ctx,game.upgrades[2])}if(game.buttons.currentPage==="effects"){effectsInfo(ctx,state)}}if(game.mode==="space"){blocks(ctx,state);shots(ctx,state);drawArrowToBase(ctx,game);positionStatus(ctx,state);positionMap(ctx,state);effectsInfo(ctx,state)}ship(ctx,state);statusBar(ctx,state);info(ctx,state);ver(ctx,state);FPS(ctx,state)};api.pointerUI=function(ctx,state){var headCir=state.input.pointer.headCir,ppsBar=state.input.pointer.ppsBar;ctx.strokeStyle="white";ctx.beginPath();ctx.arc(headCir.x,headCir.y,headCir.r,0,Math.PI*2);ctx.stroke();ctx.strokeStyle="white";ctx.beginPath();ctx.rect(ppsBar.x,ppsBar.y,ppsBar.w,ppsBar.h);ctx.stroke();ctx.fillStyle="yellow";ctx.beginPath();var h=ppsBar.h-ppsBar.h*((ppsBar.actualY-ppsBar.y)/ppsBar.h);ctx.rect(ppsBar.x,ppsBar.actualY,ppsBar.w,h);ctx.fill();ctx.fillStyle="white";ctx.beginPath();ctx.rect(ppsBar.x-2,ppsBar.targetY-3,ppsBar.w+4,6);ctx.fill()};return api}();var createCanvas=function(opt){opt=opt||{};opt.container=opt.container||document.getElementById("canvas-app")||document.body;opt.canvas=document.createElement("canvas");opt.ctx=opt.canvas.getContext("2d");opt.container.appendChild(opt.canvas);opt.canvas.width=opt.width===undefined?320:opt.width;opt.canvas.height=opt.height===undefined?240:opt.height;opt.ctx.translate(.5,.5);return opt};var canvasObj=createCanvas(),canvas=canvasObj.canvas;var state={ver:"0.25.0",canvas:canvas,ctx:canvasObj.ctx,game:gameMod.create({money:100}),debug:false,input:{pointer:{down:false,pos:{x:0,y:0},dir:0,headCir:{x:320-30,y:240-30,r:24,dist:0,a:0,d:0,dir:0},ppsBar:{x:5,y:50,w:16,h:150,targetY:200,actualY:50+75},dist:0},fire:false,keys:{}},lt:new Date,FPS_target:20,FPS:0};var updatePointer=function(game,pos){var map=game.map,input=state.input,pointer=input.pointer,headCir=pointer.headCir,ppsBar=pointer.ppsBar;var d=Math.floor(utils.angleTo(pos.x,pos.y,160,120)/(Math.PI*2)*360);pointer.dir=utils.shortestDirection(d,Math.floor(map.degree),360);pointer.dist=utils.distance(pos.x,pos.y,160,120);if(pointer.down){headCir.dist=utils.distance(pos.x,pos.y,headCir.x,headCir.y);headCir.dist=headCir.dist>headCir.r?headCir.r:headCir.dist;if(headCir.dist<headCir.r){headCir.a=utils.angleTo(pos.x,pos.y,headCir.x,headCir.y);headCir.d=Math.floor(headCir.a/(Math.PI*2)*360);headCir.dir=utils.shortestDirection(headCir.d,Math.floor(map.degree),360)}if(utils.boundingBox(pos.x,pos.y,1,1,ppsBar.x,ppsBar.y,ppsBar.w,ppsBar.h)){ppsBar.targetY=pos.y}}};var numberButtonCheck=function(game,input){if(game.mode==="base"){[1,2,3].forEach(function(n){if(input.keys[n]){game.ship.weaponIndex=n-1;game.ship.weapon=game.weapons[n-1];game.buttons.currentPage="weapons";gameMod.updateButtons(game)}})}};var save={appName:"hyper-casual-space-shooter-save",gameSaves:[],slotIndex:0,updateSlot:function(game){var createOptions=save.gameSaves[save.slotIndex];createOptions.money=game.money;createOptions.upgradeIndices={};game.upgrades.forEach(function(upgrade){createOptions.upgradeIndices[upgrade.id]=upgrade.levelIndex});createOptions.mapX=game.map.x;createOptions.mapY=game.map.y;localStorage.setItem(save.appName,JSON.stringify(save.gameSaves))}};save.gameSaves=localStorage.getItem(save.appName);if(save.gameSaves){console.log("save found, parsing");save.gameSaves=JSON.parse(save.gameSaves)}else{console.log("no save found, creating new one");save.gameSaves=[{money:1e4,upgradeIndices:{},mapX:0,mapY:0}]}var createOptions=save.gameSaves[save.slotIndex];console.log(save.gameSaves);console.log(createOptions);state.game=gameMod.create(createOptions);var loop=function(){var now=new Date,t=now-state.lt,game=state.game,map=game.map,input=state.input,speedPer=map.pps/map.maxPPS,ppsBar=input.pointer.ppsBar,secs=t/1e3;requestAnimationFrame(loop);if(t>=1e3/state.FPS_target){state.FPS=1/secs;if(game.ship.newShip){ppsBar.targetY=200;game.ship.newShip=false}updatePointer(game,input.pointer.pos);if(input.keys.w){ppsBar.targetY-=100*secs}if(input.keys.s){ppsBar.targetY+=100*secs}if(input.keys.a){map.degree+=map.degreesPerSecond*secs}if(input.keys.d){map.degree-=map.degreesPerSecond*secs}ppsBar.targetY=ppsBar.targetY<ppsBar.y?ppsBar.y:ppsBar.targetY;ppsBar.targetY=ppsBar.targetY>ppsBar.y+ppsBar.h?ppsBar.y+ppsBar.h:ppsBar.targetY;if(ppsBar.targetY!=ppsBar.actualY){if(ppsBar.actualY>ppsBar.targetY){map.pps+=map.ppsDelta*secs;map.pps=map.pps>map.maxPPS?map.maxPPS:map.pps;ppsBar.actualY=ppsBar.y+ppsBar.h-ppsBar.h*speedPer;if(ppsBar.actualY<ppsBar.targetY){ppsBar.actualY=ppsBar.targetY}}if(ppsBar.actualY<ppsBar.targetY){map.pps-=map.ppsDelta*secs;map.pps=map.pps<0?0:map.pps;ppsBar.actualY=ppsBar.y+ppsBar.h-ppsBar.h*speedPer;if(ppsBar.actualY>ppsBar.targetY){ppsBar.actualY=ppsBar.targetY}}}var headCir=input.pointer.headCir;if(input.pointer.down&&headCir.dist<headCir.r){if(headCir.dir===1){map.degree+=map.degreesPerSecond*secs}if(headCir.dir===-1){map.degree-=map.degreesPerSecond*secs}}if(input.pointer.down&&input.pointer.dist<32){var per=input.pointer.dist/32;map.pps.pps=map.maxPPS*per}input.fire=false;if(input.keys.l){input.fire=true}numberButtonCheck(game,input);map.degree=utils.mod(map.degree,360);map.radian=utils.wrapRadian(Math.PI/180*map.degree);gameMod.update(game,secs,state);draw.currentMode(state.ctx,state);draw.pointerUI(state.ctx,state);save.updateSlot(game);state.lt=now}};loop();window.addEventListener("keydown",function(e){var key=e.key.toLowerCase();state.input.keys[key]=true});window.addEventListener("keyup",function(e){var key=e.key.toLowerCase();if(key==="v"){state.debug=!state.debug}if(key==="b"){state.game.autoFire=!state.game.autoFire}state.input.keys[key]=false});var pointerEvent=function(e){var pos=state.input.pointer.pos=utils.getCanvasRelative(e);if(e.type==="mousedown"||e.type==="touchstart"){state.input.pointer.down=true}if(e.type==="mouseup"||e.type==="touchend"){state.input.pointer.down=false;gameMod.checkButtons(state.game,pos,e)}};canvas.addEventListener("mousedown",pointerEvent);canvas.addEventListener("mousemove",pointerEvent);canvas.addEventListener("mouseup",pointerEvent);
