/*
   canvas-example-game-cannon-shoot
   Copyright 2020 by Dustin Pfister
   https://raw.githubusercontent.com/dustinpfister/canvas-examples/master/LICENSE
 
   https://github.com/dustinpfister/canvas-examples
*/
var utils={};utils.once=function(){var fired=false;return function(mess){if(!fired){console.log(mess)}fired=true}}();utils.createCanvas=function(opt){opt=opt||{};opt.container=opt.container||document.getElementById("canvas-app")||document.body;opt.canvas=document.createElement("canvas");opt.ctx=opt.canvas.getContext("2d");opt.canvas.className="canvas_example";opt.canvas.width=opt.width===undefined?320:opt.width;opt.canvas.height=opt.height===undefined?240:opt.height;opt.ctx.translate(.5,.5);opt.canvas.onselectstart=function(){return false};opt.container.appendChild(opt.canvas);return opt};utils.getCanvasRelative=function(e){var canvas=e.target,bx=canvas.getBoundingClientRect(),pos={x:(e.changedTouches?e.changedTouches[0].clientX:e.clientX)-bx.left,y:(e.changedTouches?e.changedTouches[0].clientY:e.clientY)-bx.top,bx:bx};pos.x=Math.floor(pos.x/canvas.scrollWidth*canvas.width);pos.y=Math.floor(pos.y/canvas.scrollHeight*canvas.height);e.preventDefault();return pos};utils.boundingBox=function(x1,y1,w1,h1,x2,y2,w2,h2){return!(y1+h1<y2||y1>y2+h2||x1+w1<x2||x1>x2+w2)};utils.distance=function(x1,y1,x2,y2){return Math.sqrt(Math.pow(x1-x2,2)+Math.pow(y1-y2,2))};utils.mod=function mod(x,m){return(x%m+m)%m};utils.angleNormalizeHalf=function(n){var c=Math.PI*2;var h=c/2;return utils.mod(n+h,c)-h};utils.angleMinDistance=function(a,b){var m=Math.PI*2;var h=m/2;var diff=utils.angleNormalizeHalf(a-b);if(diff>h){diff=diff-m}return Math.abs(diff)};var game=function(){var createNewState=function(opt){var state={ver:opt.ver||"",canvas:canvas,ctx:ctx=canvas.getContext("2d"),mode:"aim",userDown:false,lastTick:new Date,time:0,offset:{x:0,y:0},shot:{x:0,y:0,pps:64,power:1,plps:1/10,startHeading:0,heading:0},cannon:{heading:0,power:1,sx:0,sy:0,len:100}};setCannon(state,-1,1);return state};var setCannon=function(state,heading,power){var cannon=state.cannon;cannon.heading=heading;cannon.power=power;cannon.sx=Math.cos(cannon.heading)*cannon.len,cannon.sy=Math.sin(cannon.heading)*cannon.len+state.canvas.height};var setShot=function(shot){shot.heading=shot.startHeading+shot.angleDistanceToGround*(1-shot.power);shot.pps=128+Math.floor(256*shot.power)};var fireShot=function(state){var sh=state.shot,canvas=state.canvas,ca=state.cannon;sh.startHeading=ca.heading;sh.angleDistanceToGround=utils.angleMinDistance(sh.startHeading,Math.PI/2);sh.x=canvas.width/2,sh.y=canvas.height/2,state.offset.x=ca.sx;state.offset.y=ca.sy;sh.power=ca.power;setShot(sh);state.lastTick=new Date;state.mode="fired"};var eventTypeMaps={mousedown:"start",mousemove:"move",mouseup:"end",touchstart:"start",touchmove:"move",touchend:"end"};var userAction=function(state){return function(e){var pos=utils.getCanvasRelative(e),myType=eventTypeMaps[e.type];if(myType==="start"){state.userDown=true}if(myType==="end"){state.userDown=false}var userActionMode=userAction[state.mode]||{},modeAction=userActionMode[myType];if(modeAction){modeAction(pos,state,e)}}};userAction.aim={start:function(pos,state,e){},move:function(pos,state,e){var cannon=state.cannon,canvas=state.canvas;if(state.userDown){var d=utils.distance(pos.x,pos.y,0,canvas.height);var power=d/cannon.len;power=power>1?1:power;setCannon(state,Math.atan2(canvas.height-pos.y,pos.x)*-1,.75+.25*power)}},end:function(pos,state,e){var cannon=state.cannon;var overFire=utils.boundingBox(pos.x,pos.y,1,1,canvas.width-64,canvas.height-64,64,64);if(overFire){fireShot(state)}}};userAction.over={end:function(pos,state,e){setCannon(state,-1,1);state.offset.x=0;state.offset.y=0;state.mode="aim"}};var update=function(state){var now=new Date;state.time=now-state.lastTick;state.lastTick=now;var modeUpdate=update[state.mode]||false;if(modeUpdate){modeUpdate(state)}};update.fired=function(state){var secs=state.time/1e3,canvas=state.canvas;state.offset.x+=Math.cos(state.shot.heading)*state.shot.pps*secs;state.offset.y+=Math.sin(state.shot.heading)*state.shot.pps*secs;if(state.offset.y>canvas.height){state.offset.y=canvas.height;state.mode="over"}else{state.shot.power-=state.shot.plps*secs;state.shot.power=state.shot.power<.025?0:state.shot.power}setShot(state.shot)};return{update:update,createNewState:createNewState,userAction:userAction}}();var draw=function(){var drawCellLines=function(ctx,opt){opt=opt||{};var ci=0,w=opt.w||8,h=opt.h||8,cellSize=opt.cellSize||32,cLen=w*h;offset=opt.offset||{};offset.x=offset.x===undefined?0:offset.x;offset.y=offset.y===undefined?0:offset.y;ctx.strokeStyle=opt.style||"lime";while(ci<cLen){var x=ci%w,y=Math.floor(ci/w);ctx.strokeRect(x*cellSize+offset.x,y*cellSize+offset.y,cellSize,cellSize);ci+=1}};var drawShot=function(state){var ctx=state.ctx;ctx.strokeStyle="lime";ctx.beginPath();ctx.arc(state.shot.x,state.shot.y,5,0,Math.PI*2);ctx.stroke()};var modes={aim:function(state){var ctx=state.ctx,canvas=state.canvas,cannon=state.cannon;ctx.strokeStyle="lime";ctx.beginPath();ctx.moveTo(0,canvas.height);ctx.lineTo(cannon.sx,cannon.sy);ctx.stroke();ctx.fillStyle="red";ctx.fillRect(canvas.width-64,canvas.height-64,64,64);ctx.fillStyle="black";ctx.font="20px arial";ctx.textBaseline="middle";ctx.textAlign="center";ctx.fillText("FIRE!",canvas.width-32,canvas.height-32)},fired:function(state){drawShot(state)},over:function(){drawShot(state)}};return{background:function(state){var ctx=state.ctx,canvas=state.canvas;ctx.fillStyle="black";ctx.fillRect(0,0,canvas.width,canvas.height)},currentMode:function(state){modes[state.mode](state)},gridLines:function(state){var ctx=state.ctx;var xPer=state.offset.x%32/32,yPer=state.offset.y%32/32;drawCellLines(ctx,{w:12,h:10,style:"grey",offset:{x:-32*xPer-32,y:-32*yPer-32}})},debug:function(state){var ctx=state.ctx;ctx.fillStyle="white";ctx.font="10px arial";ctx.textBaseline="top";ctx.textAlign="left";ctx.fillText("mode: "+state.mode,10,10);ctx.fillText("map offset:  "+Math.floor(state.offset.x)+","+Math.floor(state.offset.y),10,20);ctx.fillText("cannon power: "+state.cannon.power,10,30)},ver:function(state){var ctx=state.ctx;ctx.fillStyle="white";ctx.font="10px arial";ctx.textBaseline="top";ctx.textAlign="left";ctx.fillText("v"+state.ver,10,canvas.height-10)},ground:function(state){var canvas=state.canvas,yAjust=0;if(state.offset.y>-5){ctx.fillStyle="green";yAjust=state.offset.y>0?state.offset.y/canvas.height:0;ctx.fillRect(0,canvas.height-5-canvas.height/2*yAjust,canvas.width,150)}}}}();var canvasObj=utils.createCanvas(),canvas=canvasObj.canvas,ctx=canvasObj.ctx;var state=game.createNewState({ver:"0.0.1",canvas:canvas});var loop=function(){requestAnimationFrame(loop);game.update(state);draw.background(state);draw.gridLines(state);draw.ground(state);draw.currentMode(state);draw.debug(state);draw.ver(state)};loop();canvas.addEventListener("mousedown",game.userAction(state));canvas.addEventListener("mousemove",game.userAction(state));canvas.addEventListener("mouseup",game.userAction(state));canvas.addEventListener("touchstart",game.userAction(state));canvas.addEventListener("touchmove",game.userAction(state));canvas.addEventListener("touchend",game.userAction(state));
