/*
   canvas-example-turret-defense
   Copyright 2020 by Dustin Pfister
   https://raw.githubusercontent.com/dustinpfister/canvas-examples/master/LICENSE
 
   https://github.com/dustinpfister/canvas-examples
*/
var u={defaultAngleScale:Math.PI*2};u.mod=function(x,m){return(x%m+m)%m};u.normalizeHalf=function(n,scale){var c=scale||u.defaultAngleScale,h=c/2;return u.mod(n+h,c)-h};u.distance=function(x1,y1,x2,y2){return Math.sqrt(Math.pow(x1-x2,2)+Math.pow(y1-y2,2))};u.angleDistance=function(a,b,scale){var m=scale||u.defaultAngleScale,h=m/2,diff=u.normalizeHalf(a-b);if(diff>h){diff=diff-m}return Math.abs(diff)};u.getAngleToPoint=function(pt1,pt2){return u.normalizeHalf(Math.atan2(pt1.y-pt2.y,pt1.x-pt2.x))};u.shortestAngleDirection=function(a1,a2){var z=a1-a2,x=u.normalizeHalf(z);if(x<0){return-1}if(x>0){return 1}return 0};u.createCanvas=function(opt){opt=opt||{};opt.container=opt.container||document.getElementById("canvas-app")||document.body;opt.canvas=document.createElement("canvas");opt.ctx=opt.canvas.getContext("2d");opt.canvas.className="canvas_example";opt.canvas.width=opt.width===undefined?320:opt.width;opt.canvas.height=opt.height===undefined?240:opt.height;opt.ctx.translate(.5,.5);opt.canvas.onselectstart=function(){return false};opt.canvas.style.imageRendering="pixelated";opt.ctx.imageSmoothingEnabled=false;opt.container.appendChild(opt.canvas);return opt};u.getCanvasRelative=function(e){var canvas=e.target,bx=canvas.getBoundingClientRect(),pos={x:(e.changedTouches?e.changedTouches[0].clientX:e.clientX)-bx.left,y:(e.changedTouches?e.changedTouches[0].clientY:e.clientY)-bx.top,bx:bx};pos.x=Math.floor(pos.x/canvas.scrollWidth*canvas.width);pos.y=Math.floor(pos.y/canvas.scrollHeight*canvas.height);e.preventDefault();return pos};var td=function(){var holdShots=function(game){game.shots.forEach(function(shot){if(!(shot.sx===shot.x&&shot.sy===shot.y)){shot.lifeSpanAjust=(new Date-shot.shotTime)/1e3*-1;shot.sx=shot.x;shot.sy=shot.y}shot.shotTime=new Date})};var spawnShots=function(game,secs){game.shotTime+=secs;var newShots=Math.floor(game.shotTime/game.shotDelay);if(newShots>=1){game.shotTime-=newShots*game.shotDelay;if(game.shots.length<game.shotsMax){game.shots.push({sx:game.cx,sy:game.cy,x:game.cx,y:game.cy,heading:game.heading,dam:1,pps:64,hit:false,lifeSpan:3,lifeSpanAjust:0,shotTime:new Date})}}};var purgeShotCheck=function(game,i){var now=new Date,shot=game.shots[i],t=(now-shot.shotTime)/1e3;if(t>=shot.lifeSpan+shot.lifeSpanAjust||shot.hit){game.shots.splice(i,1)}};var shotEnemyCheck=function(game,shot){var i=game.enemies.length;while(i--){var enemy=game.enemies[i];if(u.distance(shot.x,shot.y,enemy.x,enemy.y)<=enemy.size){enemy.hp-=shot.dam;if(enemy.hp<0){enemy.hp=0}shot.hit=true;break}}};var updateActiveShots=function(game){var i=game.shots.length,now=new Date,shot;while(i--){shot=game.shots[i];t=(now-shot.shotTime)/1e3;shot.x=shot.sx+Math.cos(shot.heading)*t*shot.pps;shot.y=shot.sy+Math.sin(shot.heading)*t*shot.pps;shotEnemyCheck(game,shot);purgeShotCheck(game,i)}};var updateTurretShots=function(game,secs){if(game.paused){holdShots(game)}else{spawnShots(game,secs);updateActiveShots(game)}};var spawnEnemies=function(game,secs){var nec=Math.floor(game.enemyTime/game.enemyDelay);if(!game.paused){game.enemyTime+=secs;if(nec>=1){game.enemyTime-=nec*game.enemyDelay;if(nec+game.enemies.length>game.enemiesMax){nec=game.enemiesMax-game.enemies.length}var i=nec,r,x,y;while(i--){r=Math.random()*(Math.PI*2);x=Math.cos(r)*100+game.cx;y=Math.sin(r)*100+game.cy;game.enemies.push({x:x,y:y,hp:1,size:10})}}}};var purgeEnemies=function(game){var i=game.enemies.length;while(i--){var enemy=game.enemies[i];if(enemy.hp<=0){game.enemies.splice(i,1)}}};var setTurretRPS=function(game){game.rps=0;if(game.enemies.length>0){var target=game.enemies[0],a=u.getAngleToPoint({x:game.cx,y:game.cy},target),d=u.angleDistance(game.heading,a),p=1-d/Math.PI,dir=u.shortestAngleDirection(game.heading,a);game.rps=3*p*dir}};var api={};api.createGameObject=function(){return{ver:"0.0.0",cx:canvas.width/2,cy:canvas.height/2,heading:0,rps:0,lt:new Date,paused:false,shots:[],shotsMax:13,shotDelay:1,shotTime:0,enemies:[],enemiesMax:3,enemyDelay:1,enemyTime:0}};api.update=function(game){var now=new Date,secs=(now-game.lt)/1e3;if(game.paused){game.lt=now}else{game.heading+=game.rps*secs;game.heading%=Math.PI*2;game.lt=now}setTurretRPS(game);updateTurretShots(game,secs);spawnEnemies(game,secs);purgeEnemies(game)};return api}();var draw={};draw.background=function(ctx,canvas){ctx.fillStyle="black";ctx.fillRect(0,0,canvas.width,canvas.height)};draw.turret=function(turret,ctx,canvas){ctx.save();ctx.translate(turret.cx,turret.cy);ctx.rotate(turret.heading);ctx.fillStyle="green";ctx.fillRect(-8,-8,16,16);ctx.strokeStyle="white";ctx.lineWidth=3;ctx.beginPath();ctx.moveTo(0,0);ctx.lineTo(16,0);ctx.stroke();ctx.restore()};draw.turretShots=function(turret,ctx,canvas){ctx.fillStyle="blue";turret.shots.forEach(function(shot){ctx.beginPath();ctx.arc(shot.x,shot.y,5,0,Math.PI*2);ctx.fill()})};draw.turretInfo=function(turret,ctx,canvas){ctx.fillStyle="white";ctx.textBaseline="top";ctx.font="10px arial";ctx.fillText("heading: "+turret.heading.toFixed(2),5,5);ctx.fillText("shotTime: "+turret.shotTime.toFixed(2),5,15);ctx.fillText("active shots: "+turret.shots.length,5,25);ctx.fillText("active enemies: "+turret.enemies.length,5,35);ctx.fillText("turret RPS: "+turret.rps,5,45)};draw.ver=function(turret,ctx,canvas){ctx.fillStyle="white";ctx.textBaseline="top";ctx.textAlign="left";ctx.font="10px arial";ctx.fillText("v"+turret.ver,5,canvas.height-15)};draw.enemies=function(game,ctx,canvas){ctx.fillStyle="red";game.enemies.forEach(function(enemy){ctx.beginPath();ctx.arc(enemy.x,enemy.y,enemy.size,0,Math.PI*2);ctx.fill()})};var canvasObj=u.createCanvas(),canvas=canvasObj.canvas,ctx=canvasObj.ctx;var game=td.createGameObject();var loop=function(){requestAnimationFrame(loop);td.update(game);draw.background(ctx,canvas);draw.turret(game,ctx,canvas);draw.enemies(game,ctx,canvas);draw.turretInfo(game,ctx,canvas);draw.turretShots(game,ctx,canvas);draw.ver(game,ctx,canvas)};loop();canvas.tabIndex=0;canvas.addEventListener("focus",function(){game.paused=false});canvas.addEventListener("blur",function(){game.paused=true});canvas.focus();canvas.blur();
