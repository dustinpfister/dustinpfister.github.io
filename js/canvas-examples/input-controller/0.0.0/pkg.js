/*
   canvas-example-input-controller
   Copyright 2020 by Dustin Pfister
   https://raw.githubusercontent.com/dustinpfister/canvas-examples/master/LICENSE
 
   https://github.com/dustinpfister/canvas-examples
*/
var utils={};utils.createCanvas=function(opt){opt=opt||{};opt.container=opt.container||document.getElementById("canvas-app")||document.body;opt.canvas=document.createElement("canvas");opt.ctx=opt.canvas.getContext("2d");opt.canvas.className="canvas_example";opt.canvas.width=opt.width===undefined?320:opt.width;opt.canvas.height=opt.height===undefined?240:opt.height;opt.ctx.translate(.5,.5);opt.canvas.onselectstart=function(){return false};opt.canvas.style.imageRendering="pixelated";opt.ctx.imageSmoothingEnabled=false;opt.container.appendChild(opt.canvas);return opt};utils.isMouse=function(e){return e.type.substr(0,5)==="mouse"};utils.getCanvasRelativeArray=function(e){var canvas=e.target,bx=canvas.getBoundingClientRect(),pos,arr=[];if(utils.isMouse(e)){pos={x:e.clientX-bx.left,y:e.clientY-bx.top,bx:bx,e:e,touch:{}};pos.x=Math.floor(pos.x/canvas.scrollWidth*canvas.width);pos.y=Math.floor(pos.y/canvas.scrollHeight*canvas.height);return[pos]}var i=0,touch;while(i<e.targetTouches.length){touch=e.targetTouches[i];pos={x:touch.clientX-bx.left,y:touch.clientY-bx.top,touch:touch,e:e,bx:bx};pos.x=Math.floor(pos.x/canvas.scrollWidth*canvas.width);pos.y=Math.floor(pos.y/canvas.scrollHeight*canvas.height);arr.push(pos);i+=1}return arr};var controlMod=function(){var fill=function(count,val){return Array.apply(0,{length:count}).map(function(){return val})};var createInputState=function(canvas,win){var input={ver:"0.0.0",canvas:canvas,win:win,pointerDown:false,keys:{},pos:[],keys:fill(255,false),userHanders:{pointerStart:[],pointerMove:[],pointerEnd:[],keydown:[],keyup:[]}};return input};var callUserHanders=function(input,type,a,e){input.userHanders[type].forEach(function(userHandler){userHandler.call(input,a,input,e)})};var handlers={pointerStart:function(pos,input,e){input.pointerDown=true;input.pos=pos;callUserHanders(input,"pointerStart",pos,e)},pointerMove:function(pos,input,e){if(input.pointerDown){input.pos=pos}callUserHanders(input,"pointerMove",pos,e)},pointerEnd:function(pos,input,e){if(utils.isMouse(e)){input.pointerDown=false;input.pos=[]}else{if(e.targetTouches.length===0){input.pointerDown=false;input.pos=[]}else{input.pos=pos}}callUserHanders(input,"pointerEnd",pos,e)}};var setPointerHandler=function(input,DOMType,type){console.log(input.canvas);input.canvas.addEventListener(DOMType,function(e){console.log(DOMType);var pos=utils.getCanvasRelativeArray(e);e.preventDefault();handlers[type](pos,input,e)})};var setKeyHandler=function(input,DOMType){input.win.addEventListener(DOMType,function(e){input.keys[e.keyCode]=e.type==="keydown";callUserHanders(input,DOMType,input.keys,e)})};var api=function(canvas,win){var input=createInputState(canvas,win||window);setPointerHandler(input,"mousedown","pointerStart");setPointerHandler(input,"mousemove","pointerMove");setPointerHandler(input,"mouseup","pointerEnd");setPointerHandler(input,"mouseout","pointerEnd");setPointerHandler(input,"touchstart","pointerStart");setPointerHandler(input,"touchmove","pointerMove");setPointerHandler(input,"touchend","pointerEnd");setPointerHandler(input,"touchcancel","pointerEnd");setKeyHandler(input,"keydown");setKeyHandler(input,"keyup");return input};api.add=function(input,type,hander){input.userHanders[type].push(hander)};return api}();var draw={};draw.back=function(ctx,canvas){ctx.fillStyle="black";ctx.fillRect(0,0,canvas.width,canvas.height)};draw.debugInput=function(ctx,input){ctx.fillStyle="white";ctx.textBaseline="top";ctx.font="20px arial";ctx.fillText("input.pointerDown: "+input.pointerDown,10,20);var posPoints=input.pos.map(function(pos){return pos.x+","+pos.y}).join(" | ");ctx.fillText("input.pos: "+posPoints,10,40);ctx.fillText("input.keys[87] (w): "+input.keys[87],10,60);ctx.fillText("input.keys[65] (a): "+input.keys[65],10,80);ctx.fillText("input.keys[83] (s): "+input.keys[83],10,100);ctx.fillText("input.keys[68] (d): "+input.keys[68],10,120)};draw.ver=function(ctx,input){var canvas=input.canvas;ctx.fillStyle="white";ctx.textBaseline="top";ctx.font="10px arial";ctx.fillText("v"+input.ver,5,canvas.height-15)};var canvasObj=utils.createCanvas({width:640,height:480}),canvas=canvasObj.canvas,ctx=canvasObj.ctx;var input=controlMod(canvas);controlMod.add(input,"pointerStart",function(pos,input,e){console.log("pointer event staretd: ");console.log(pos)});controlMod.add(input,"keydown",function(keys,input,e){console.log("key down:");console.log("keys[65]: "+keys[65])});var loop=function(){requestAnimationFrame(loop);draw.back(ctx,canvas);draw.debugInput(ctx,input);draw.ver(ctx,input)};loop();
