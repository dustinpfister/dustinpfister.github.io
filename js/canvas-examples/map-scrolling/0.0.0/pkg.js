/*
   canvas-example-map-scrolling
   Copyright 2020 by Dustin Pfister
   https://raw.githubusercontent.com/dustinpfister/canvas-examples/master/LICENSE
 
   https://github.com/dustinpfister/canvas-examples
*/
var utils={};utils.createCanvas=function(opt){opt=opt||{};opt.container=opt.container||document.getElementById("canvas-app")||document.body;opt.canvas=document.createElement("canvas");opt.ctx=opt.canvas.getContext("2d");opt.canvas.className="canvas_example";opt.canvas.width=opt.width===undefined?320:opt.width;opt.canvas.height=opt.height===undefined?240:opt.height;opt.ctx.translate(.5,.5);opt.canvas.onselectstart=function(){return false};opt.canvas.style.imageRendering="pixelated";opt.ctx.imageSmoothingEnabled=false;opt.container.appendChild(opt.canvas);return opt};utils.getCanvasRelative=function(e){var canvas=e.target,bx=canvas.getBoundingClientRect(),pos={x:(e.changedTouches?e.changedTouches[0].clientX:e.clientX)-bx.left,y:(e.changedTouches?e.changedTouches[0].clientY:e.clientY)-bx.top,bx:bx};pos.x=Math.floor(pos.x/canvas.scrollWidth*canvas.width);pos.y=Math.floor(pos.y/canvas.scrollHeight*canvas.height);e.preventDefault();return pos};var g={};g.parseGridProps=function(grid){var a={};a.width=grid.width||64;a.height=grid.height||16;a.cellSize=grid.cellSize||32;a.xOffset=grid.xOffset===undefined?0:grid.xOffset;a.yOffset=grid.yOffset===undefined?0:grid.yOffset;a.bufferSize=grid.bufferSize===undefined?32:grid.bufferSize;a.selectedCellIndex=grid.selectedCellIndex||-1;a.cells=[];return a};g.createGridObject=function(w,h){var a=g.parseGridProps({width:w,height:h});var grid=g.createClearCellGrid(a);grid.ver="0.0.0";return grid};g.createClearCellGrid=function(grid){var a=g.parseGridProps(grid);var i=0,x,y,len=a.width*a.height;while(i<len){a.cells.push({i:i,x:i%a.width,y:Math.floor(i/a.width),type:0,worth:0});i+=1}return a};g.clampedOffsets=function(grid,canvas,pxRatio){canvas=canvas||{width:320,height:120};pxRatio=pxRatio||1;var w=grid.width*grid.cellSize*pxRatio,h=grid.height*grid.cellSize*pxRatio,bufferSize=grid.bufferSize*pxRatio,xMin=bufferSize*pxRatio,yMin=bufferSize*pxRatio,xMax=(w-canvas.width+bufferSize)*-1,yMax=(h-canvas.height+bufferSize)*-1,x=grid.xOffset,y=grid.yOffset;x=x>xMin?xMin:x;y=y>yMin?yMin:y;x=x<xMax?xMax:x;y=y<yMax?yMax:y;return{xOffset:x,yOffset:y}};g.get=function(grid,x,y){if(x<0||y<0||x>=grid.width||y>=grid.height){return{}}return grid.cells[y*grid.width+x]};g.getCellPositionFromCanvasPoint=function(grid,x,y){return{x:Math.floor((x-grid.xOffset)/grid.cellSize),y:Math.floor((y-grid.yOffset)/grid.cellSize)}};g.getCellFromCanvasPoint=function(grid,x,y){var pos=g.getCellPositionFromCanvasPoint(grid,x,y);return g.get(grid,pos.x,pos.y)};g.getPointerMovementDeltas=function(grid,canvas,px,py){var cx=canvas.width/2,cy=canvas.height/2,a=Math.atan2(py-cy,px-cx),d=Math.sqrt(Math.pow(px-cx,2)+Math.pow(py-cy,2)),per,dMax=canvas.height/2,delta;d=d>=dMax?dMax:d;per=d/dMax;delta=(.5+per*2.5)*-1;return{x:Math.cos(a)*delta,y:Math.sin(a)*delta}};var drawMap=function(grid,ctx,canvas,pxRatio){var colors=["yellow","green"],cellSize=grid.cellSize||10,x,y,xOffset=grid.xOffset,yOffset=grid.yOffset;pxRatio=pxRatio||1;cellSize=cellSize*pxRatio;grid.cells.forEach(function(cell){ctx.fillStyle=colors[cell.type]||"white";x=cell.x*cellSize+xOffset*pxRatio;y=cell.y*cellSize+yOffset*pxRatio;ctx.fillRect(x,y,cellSize,cellSize);ctx.strokeStyle="white";ctx.strokeRect(x,y,cellSize,cellSize)});if(grid.selectedCellIndex>-1){ctx.strokeStyle="red";var cell=grid.cells[grid.selectedCellIndex],x=cell.x*cellSize+xOffset*pxRatio;y=cell.y*cellSize+yOffset*pxRatio;ctx.strokeStyle="red";ctx.strokeRect(x,y,cellSize,cellSize)}};var canvasObj=utils.createCanvas({width:320,height:240}),canvas=canvasObj.canvas,ctx=canvasObj.ctx;var ratio=window.devicePixelRatio||1;var grid=g.createGridObject(12,8);grid.xOffset=0;grid.yOffset=0;var mousedown=false,gridDelta={x:0,y:0};var loop=function(){requestAnimationFrame(loop);grid.xOffset+=gridDelta.x*ratio;grid.yOffset+=gridDelta.y*ratio;var offsets=g.clampedOffsets(grid,canvas,ratio);grid.xOffset=offsets.xOffset;grid.yOffset=offsets.yOffset;ctx.fillStyle="black";ctx.fillRect(0,0,canvas.width,canvas.height);drawMap(grid,ctx,canvas,ratio);ctx.fillStyle="red";ctx.textBaseline="top";ctx.textAlign="left";ctx.font="10px arial";ctx.fillText("v"+grid.ver,5,canvas.height-15)};loop();canvas.addEventListener("mousedown",function(e){var pos=utils.getCanvasRelative(e);e.preventDefault();mousedown=true;var cell=g.getCellFromCanvasPoint(grid,pos.x/ratio,pos.y/ratio);if(cell.i===grid.selectedCellIndex){grid.selectedCellIndex=-1}else{if(cell.i>=0){grid.selectedCellIndex=cell.i}}});canvas.addEventListener("mouseup",function(e){e.preventDefault();mousedown=false;gridDelta.x=0;gridDelta.y=0});canvas.addEventListener("mousemove",function(e){var canvas=e.target,bx=canvas.getBoundingClientRect(),x=(e.clientX-bx.left)*ratio,y=(e.clientY-bx.top)*ratio,deltas=g.getPointerMovementDeltas(grid,canvas,x,y);if(mousedown){gridDelta.x=deltas.x;gridDelta.y=deltas.y}});
