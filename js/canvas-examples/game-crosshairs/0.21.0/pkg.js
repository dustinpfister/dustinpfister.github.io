(function(){var utils={};utils.distance=function(x1,y1,x2,y2){return Math.sqrt(Math.pow(x1-x2,2)+Math.pow(y1-y2,2));};utils.logPer=function(per,high){high=high===undefined?2:high;per=per<0?0:per;per=per>1?1:per;return Math.log((1+high-2)+per)/Math.log(high);};utils.deepClone=function(obj){return JSON.parse(JSON.stringify(obj));};var XP=(function(){var DEFAULTS={level:1,xp:0,cap:30,deltaNext:50};var set=function(xp,deltaNext){return(1+Math.sqrt(1+8*xp/deltaNext))/2;};var getXPtoLevel=function(level,deltaNext){return((Math.pow(level,2)-level)*deltaNext)/2;};var parseByXP=function(xp,cap,deltaNext){xp=xp===undefined?DEFAULTS.xp:xp;cap=cap===undefined?DEFAULTS.cap:cap;deltaNext=deltaNext===undefined?DEFAULTS.deltaNext:deltaNext;var l=set(xp,deltaNext);l=l>cap?cap:l;var level=Math.floor(l),forNext=getXPtoLevel(level+1,deltaNext);forNext=l===cap?Infinity:forNext;var toNext=l===cap?Infinity:forNext-xp;var forLast=getXPtoLevel(level,deltaNext);return{level:level,levelFrac:l,cap:cap,xp:xp,per:(xp-forLast)/(forNext-forLast),forNext:forNext,toNext:toNext,forLast:forLast,valueOf:function(){return this.level;}};};var api={};api.parseByLevel=function(l,cap,deltaNext){l=l===undefined?DEFAULTS.level:l;deltaNext=deltaNext===undefined?DEFAULTS.deltaNext:deltaNext;var xp=getXPtoLevel(l,deltaNext);return parseByXP(xp,cap,deltaNext);};api.parseByXP=parseByXP;var getSkillPointsPer=function(skillPoints){var per=1-(1/(skillPoints+1));return utils.logPer(per,2,2.5);};api.applySkillPoints=function(levelObj,skillPoints,opt){opt=opt||{};opt.SPEffectMax=opt.SPEffectMax===undefined?1000:opt.SPEffectMax;opt.levelEffectMax=opt.levelEffectMax===undefined?250:opt.levelEffectMax;opt.baseValue=opt.baseValue===undefined?0:opt.baseValue;var level=levelObj.level,spPer=getSkillPointsPer(skillPoints),spValue=opt.SPEffectMax*spPer;levelValue=opt.levelEffectMax*utils.logPer((level/levelObj.cap),2,2),n=opt.baseValue+spValue+levelValue;return{levelObj:levelObj,opt:opt,levelValue:levelValue,spValue:spValue,baseValue:opt.baseValue,n:n,valueOf:function(){return this.n;}};};return api;} ());var crossMod=(function(){var isInInner=function(cross){var ch=cross.crosshairs,center=cross.center;return utils.distance(ch.x,ch.y,center.x,center.y)<cross.radiusInner;};var isInOuter=function(cross){var ch=cross.crosshairs,center=cross.center;return utils.distance(ch.x,ch.y,center.x,center.y)>=cross.radiusInner;};var isOutOfBounds=function(cross){var ch=cross.crosshairs,center=cross.center;return utils.distance(ch.x,ch.y,center.x,center.y)>=cross.radiusOuter;};var moveOffset=function(cross,secs){var ch=cross.crosshairs,center=cross.center,per={min:0.1,max:1,current:0.1},d=utils.distance(ch.x,ch.y,center.x,center.y)-cross.radiusInner;per.current=per.min+(per.max-per.min)*(d/cross.radiusDiff);cross.offset.x+=Math.cos(ch.heading)*cross.offset.pps*per.current*secs;cross.offset.y+=Math.sin(ch.heading)*cross.offset.pps*per.current*secs;};return{isInInner:isInInner,isInOuter:isInOuter,create:function(opt){opt=opt||{};var cross={userDown:false,moveBackEnabled:false,pps:opt.pps||128,radiusInner:opt.radiusInner||(240/4),radiusOuter:opt.radiusOuter||(240/2.125),radiusDiff:0,center:{x:opt.cx||(320/2),y:opt.cy||(240/2)},crosshairs:{x:320/2,y:240/2,heading:0,radius:16},offset:{x:opt.offsetX||0,y:opt.offsetY||0,pps:256}};cross.radiusDiff=cross.radiusOuter-cross.radiusInner;return cross;},update:function(cross,secs){secs=secs||0;var ch=cross.crosshairs,center=cross.center;ch.heading=Math.atan2(center.y-ch.y,center.x-ch.x);if(isOutOfBounds(cross)){ch.x=center.x;ch.y=center.y;cross.userDown=false;} if(isInOuter(cross)){if(!cross.userDown&&cross.moveBackEnabled){ch.x+=Math.cos(ch.heading)*cross.pps*secs;ch.y+=Math.sin(ch.heading)*cross.pps*secs;} moveOffset(cross,secs);}},userAction:function(cross,eventType,pos){var ch=cross.crosshairs;if(eventType==='start'){cross.userDown=true;ch.x=pos.x;ch.y=pos.y;} if(eventType==='end'){cross.userDown=false;} if(eventType==='move'){if(cross.userDown){ch.x=pos.x;ch.y=pos.y;}}},center:function(cross,cw,ch,cs,n){cw=cw||8;ch=ch||8;cs=cs===undefined?32:cs;n=n==undefined?-1:n;cross.offset.x=cw*cs/2*n;cross.offset.y=ch*cs/2*n;}};} ());var mapMod=(function(){var cellTypes=[{i:0,type:'grass',HP:{min:5,max:10,base:1.05},autoHeal:{rate:0.5,amount:1}},{i:1,type:'tree',HP:{min:20,max:30,base:1.08},autoHeal:{rate:1,amount:5}},{i:2,type:'rock',HP:{min:35,max:50,base:1.15},autoHeal:{rate:3,amount:50}}];var setCellType=function(cell,typeIndex,opt){var level=cell.levelObj.level,min,max;opt=opt||{};typeIndex=typeIndex===undefined?Math.round(cell.damagePer*(cellTypes.length-1)):typeIndex;cell.type=cellTypes[typeIndex];cell.typeIndex=typeIndex;cell.active=opt.active===undefined?true:opt.active;min=Math.pow(level,cell.type.HP.base)*cell.type.HP.min;max=Math.pow(level,cell.type.HP.base)*cell.type.HP.max;cell.maxHP=min+Math.round((max-min)*Math.random());cell.HP=opt.HP===undefined?cell.maxHP:opt.HP;cell.autoHeal.rate=cell.type.autoHeal.rate;cell.autoHeal.amount=cell.type.autoHeal.amount;};var getHighestDamageCell=function(map){return Math.max.apply(null,map.cells.map(function(cell){return cell.damage;}));};var get=function(map,x,y){if(x<0||y<0){return undefined;} if(x>=map.cellWidth||y>=map.cellHeight){return undefined;} return map.cells[y*map.cellWidth+x];};var autoHeal=function(cell,secs){cell.autoHeal.secs+=secs;if(cell.autoHeal.secs>=cell.autoHeal.rate){cell.autoHeal.secs%=cell.autoHeal.rate;cell.HP+=cell.autoHeal.amount;cell.HP=cell.HP>cell.maxHP?cell.maxHP:cell.HP;}};var getBorderCells=function(map,cell){var i=8,borderCell,cells=[],r,x,y;if(!cell){return[];} while(i--){r=Math.PI*2/8*i;x=Math.round(cell.x+Math.cos(r));y=Math.round(cell.y+Math.sin(r));borderCell=get(map,x,y);if(borderCell){cells.push(borderCell);}} return cells;};var getBorderCellsActiveCount=function(map,cell,active){active===undefined?true:active;var borderCells=getBorderCells(map,cell);return borderCells.reduce(function(acc,cell){acc=typeof acc==='object'?Number(acc.active===active):acc;return acc+=Number(cell.active==active);});};var getAllCellActiveState=function(map,active,condition){active=active===undefined?true:active;condition=condition===undefined?function(cell){return true;}:condition;return map.cells.filter(function(cell){if(cell.active===active&&condition(map,cell)){return true;} return false;});};var condition_gen_cell=function(map,cell){var borderCells=getBorderCells(map,cell);return getBorderCellsActiveCount(map,cell,true)>=1;};var getGenCells=function(map){return getAllCellActiveState(map,false,condition_gen_cell);};var popRandomCell=function(cells){var i=Math.floor(Math.random()*cells.length);return cells.splice(i,1)[0];};var gen=function(map,secs){var cells,cell,i;map.gen.secs+=secs;if(map.gen.secs>=map.gen.rate){map.gen.secs%=map.gen.rate;cells=getGenCells(map);i=map.gen.count;if(cells.length-i<0){i=cells.length;} if(i>0){while(i--){cell=popRandomCell(cells);setCellType(cell);}}else{cells=getAllCellActiveState(map,true);if(cells.length===0){cell=map.cells[map.gen.startCells[Math.floor(Math.random()*map.gen.startCells.length)]];setCellType(cell);}}}};var blastArea=function(map,x,y,r,maxDamage){var cx,cy=y-r,d,cell;while(cy<y+r){cx=x-r;while(cx<x+r){cell=get(map,cx,cy);d=utils.distance(cx,cy,x,y);if(cell&&d<=r){cell.damage+=(1-d/r)*maxDamage;} cx+=1;} cy+=1;} api.update(map,0);};var startBlasts=function(map,opt){opt=opt||{};var rMin=opt.blastRMin||map.cellWidth/4,rMax=opt.blastRMax||map.cellWidth/2,r=rMin+Math.round((rMax-rMin)*Math.random()),blastCount=opt.blastCount===undefined?10:opt.blastCount,maxDamage=opt.blastMaxDamage||10,x,y,i=0;while(i<blastCount){x=Math.floor(map.cellWidth*Math.random());y=Math.floor(map.cellHeight*Math.random());blastArea(map,x,y,r,maxDamage);i+=1;}};var api={get:get,getAllCellActiveState:getAllCellActiveState,create:function(opt){opt=opt||{};var map={cellSize:32,cellWidth:opt.cellWidth||8,cellHeight:opt.cellHeight||8,cells:[],cellLevel:{cap:opt.cellLevelCap||10,deltaNext:opt.cellDeltaNext||200},percentRemain:1,gen:{rate:opt.genRate||0.2,secs:0,count:opt.genCount||6,startCells:opt.startCells||[0]},highDamageCell:0};var i=0,cell,x,y,len=map.cellWidth*map.cellHeight;while(i<len){cell={i:i,x:i%map.cellWidth,y:Math.floor(i/map.cellWidth),HP:50,maxHP:100,active:false,typeIndex:0,typeName:cellTypes[0].name,type:cellTypes[0],autoHeal:{rate:1,amount:5,secs:0},damage:opt.startingCellDamage||0,damagePer:0,levelObj:XP.parseByXP(0,map.cellLevel.cap,map.cellLevel.deltaNext)};map.cells.push(cell);i+=1;} api.update(map,0);startBlasts(map,opt);i=0;while(i<len){cell=map.cells[i];setCellType(cell);i+=1;} return map;},clampOffset:function(map,offset){offset.x=offset.x>0?0:offset.x;offset.y=offset.y>0?0:offset.y;offset.x=offset.x<map.cellWidth*map.cellSize* -1?map.cellWidth*map.cellSize* -1:offset.x;offset.y=offset.y<map.cellHeight*map.cellSize* -1?map.cellHeight*map.cellSize* -1:offset.y;},getAllFromPointAndRadius:function(map,x,y,r){var i=map.cells.length,d,cell,cells=[],dists=[];while(i--){cell=map.cells[i];d=utils.distance(cell.x,cell.y,x,y);if(d<=r){cells.push(cell);dists.push(d);}} return{cells:cells,dists:dists};},getWithCanvasPointAndOffset:function(map,canvasX,canvasY,offsetX,offsetY){var x=canvasX-160+Math.abs(offsetX),y=canvasY-120+Math.abs(offsetY);return get(map,Math.floor(x/map.cellSize),Math.floor(y/map.cellSize));},update:function(map,secs){var i,cell;map.highDamageCell=getHighestDamageCell(map);map.percentRemain=0;i=map.cells.length;while(i--){cell=map.cells[i];if(cell.HP<=0){cell.active=false;} if(cell.active){autoHeal(cell,secs);map.percentRemain+=cell.HP/cell.maxHP;} if(cell.damage!=0){cell.damagePer=cell.damage/map.highDamageCell;} cell.levelObj=XP.parseByXP(cell.damage,map.cellLevel.cap,map.cellLevel.deltaNext);} map.percentRemain/=map.cells.length;gen(map,secs);}};return api;} ());var poolMod=(function(){return{create:function(opt){opt=opt||{};opt.count=opt.count||10;var i=0,pool=[];while(i<opt.count){pool.push({active:false,x:0,y:0,radius:8,heading:0,pps:32,lifespan:opt.lifespan||3,data:{},spawn:opt.spawn||function(obj,state){obj.active=true;},purge:opt.purge||function(obj,state){},update:opt.update||function(obj,state,secs){obj.x+=obj.pps*secs;obj.lifespan-=secs;}});i+=1;} return pool;},spawn:function(pool,game,opt){var i=pool.length,obj;while(i--){obj=pool[i];if(!obj.active){obj.active=true;obj.spawn.call(obj,obj,game,opt);break;}}},update:function(pool,state,secs){var i=pool.length,obj;while(i--){obj=pool[i];if(obj.active){obj.update(obj,state,secs);obj.lifespan=obj.lifespan<0?0:obj.lifespan;if(obj.lifespan===0){obj.active=false;obj.purge.call(obj,obj,state);}}}},setActiveStateForAll:function(pool,bool){bool=bool===undefined?false:bool;var i=pool.length,obj;while(i--){obj=pool[i];obj.active=bool;}}}} ());var buttonMod=(function(){var setupType=function(button,opt){if(button.type==='options'){button.options=opt.options||[];button.currentOption=0;button.label=button.options[0];} if(button.type==='toggle'){button.bool=opt.bool||false;button.onActive=opt.onActive||function(){};button.onInactive=opt.onInactive||function(){};} if(button.type==='upgrade'){button.onUpgrade=opt.onUpgrade||function(){};button.onDowngrade=opt.onDowngrade||function(){};}};var beforeOnClick={basic:function(){},options:function(button,api,point){button.currentOption+=1;button.currentOption=button.currentOption>=button.options.length?0:button.currentOption;},toggle:function(button,api,point){button.bool=!button.bool;},upgrade:function(button,api,point){if(point.y<button.y){button.onUpgrade(button,api,point);} if(point.y>button.y){button.onDowngrade(button,api,point);}}};var afterOnClick={basic:function(){},options:function(){},toggle:function(button,api,point){if(button.bool){button.onActive(button,api,point);}else{button.onInactive(button,api,point);}},upgrade:function(){}};return{create:function(opt){opt=opt||{};var button={x:opt.x===undefined?0:opt.x,y:opt.y===undefined?0:opt.y,r:opt.r===undefined?16:opt.r,label:opt.label||'',info:opt.info||'',type:opt.type||'basic',data:opt.data||{},onClick:opt.onClick||function(){}};setupType(button,opt);return button;},pointerCheckCollection:function(collection,point,api){var keys=Object.keys(collection),i=keys.length,button,d;while(i--){button=collection[keys[i]];d=utils.distance(point.x,point.y,button.x,button.y);if(d<button.r){beforeOnClick[button.type](button,api,point);button.onClick(button,api,point);afterOnClick[button.type](button,api,point)}}}};} ());var gameMod=(function(){var api={};var hardSet={maxSecs:0.25,deltaNext:5000,levelCap:1000,saveStringVer:'v1'};var WeaponsDefaults=[{name:'Blaster',locked:false,unLockAt:0,pps:256,shotRate:0.125,blastRadius:1,maxDPS:10,accuracy:0.75,hitRadius:64,gunCount:1,manaCost:1,level:{maxDPS:{SPEffectMax:50,levelEffectMax:40,baseValue:10},manaCost:{SPEffectMax:0,levelEffectMax:0,baseValue:2}}},{name:'Assault Blaster',locked:true,unLockAt:5,pps:512,shotRate:0.125,blastRadius:2,maxDPS:5,accuracy:0.5,hitRadius:64,gunCount:4,manaCost:5,level:{maxDPS:{SPEffectMax:70,levelEffectMax:25,baseValue:5},manaCost:{SPEffectMax:0,levelEffectMax:0,baseValue:5}}},{name:'Cannon',locked:true,unLockAt:15,pps:256,shotRate:0.5,blastRadius:3,maxDPS:20,accuracy:0.25,hitRadius:32,gunCount:2,manaCost:10,level:{maxDPS:{SPEffectMax:300,levelEffectMax:180,baseValue:20},manaCost:{SPEffectMax:0,levelEffectMax:0,baseValue:10}}},{name:'Atom',locked:true,unLockAt:50,pps:128,shotRate:1,blastRadius:10,maxDPS:75,accuracy:0,hitRadius:64,gunCount:1,manaCost:35,level:{maxDPS:{SPEffectMax:500,levelEffectMax:450,baseValue:50},manaCost:{SPEffectMax:0,levelEffectMax:0,baseValue:35},accuracy:{SPEffectMax:0.75,levelEffectMax:0.25,baseValue:0}}}];var setWeaponsToLevel=function(game){var level=game.levelObj.level;game.weapons.forEach(function(weapon,i){var lv=weapon.level,sp=game.skills['weapon_'+i].points;Object.keys(weapon.level).forEach(function(weaponStatName){weapon[weaponStatName]=XP.applySkillPoints(game.levelObj,sp,weapon.level[weaponStatName]);});weapon.locked=true;if(level>=weapon.unLockAt){weapon.locked=false;}});};var shotOptions={count:20,spawn:function(shot,game,radian){var offset=game.cross.offset,w=game.weapons[game.weaponIndex],ch=game.cross.crosshairs,center=game.cross.center,offset=game.cross.offset,r=Math.random()*(Math.PI*2),d=w.hitRadius*(1-w.accuracy)*Math.random(),x=Math.abs(offset.x)+ch.x+Math.cos(r)*d-center.x,y=Math.abs(offset.y)+ch.y+Math.sin(r)*d-center.y;shot.x=x+Math.cos(radian)*game.canvas.width;shot.y=y+Math.sin(radian)*game.canvas.width;shot.heading=Math.atan2(y-shot.y,x-shot.x);d=utils.distance(shot.x,shot.y,x,y);shot.pps=w.pps;shot.lifespan=d/shot.pps;},purge:function(shot,game){poolMod.spawn(game.explosions,game,shot);},update:function(shot,game,secs){shot.x+=Math.cos(shot.heading)*shot.pps*secs;shot.y+=Math.sin(shot.heading)*shot.pps*secs;shot.lifespan-=secs;}};var explosionOptions={count:20,spawn:function(ex,game,shot){var w=game.weapons[game.weaponIndex];ex.x=shot.x;ex.y=shot.y;ex.data.radiusEnd=game.map.cellSize*w.blastRadius;ex.data.explosionTime=0.6;ex.data.maxDPS=w.maxDPS;;ex.lifespan=ex.data.explosionTime;ex.per=0;},purge:function(ex,game){},update:function(ex,game,secs){ex.per=(ex.data.explosionTime-ex.lifespan)/ex.data.explosionTime;ex.radius=ex.data.radiusEnd*ex.per;cellPos={x:Math.floor(ex.x/game.map.cellSize),y:Math.floor(ex.y/game.map.cellSize)},blastRadius=Math.ceil((ex.radius+0.01)/game.map.cellSize);var targets=mapMod.getAllFromPointAndRadius(game.map,cellPos.x,cellPos.y,blastRadius);targets.cells.forEach(function(cell,i){var damage=ex.data.maxDPS*(1-(targets.dists[i]/blastRadius))*secs;if(cell){if(cell.active){game.totalDamage+=damage;cell.HP-=damage;cell.HP=cell.HP<0?0:cell.HP;} cell.damage+=damage;}});ex.lifespan-=secs;}};var shoot=function(game){var w=game.weapons[game.weaponIndex];if(game.shotSecs>=game.shotRate&&game.mana.current>=w.manaCost){var i=0,radian;while(i<w.gunCount){radian=Math.PI*2/4*i+Math.PI/4;poolMod.spawn(game.shots,game,radian);i+=1;} game.shotSecs=0;game.mana.current-=w.manaCost;}};var autoPlay={setRandomTarget:function(game){var ch=game.cross.crosshairs,os=game.cross.offset,ap=game.autoPlay,map=game.map,activeCells=mapMod.getAllCellActiveState(map,true),x=Math.floor(map.cellWidth*Math.random()),y=Math.floor(map.cellHeight*Math.random()),cell;if(activeCells.length>=1){cell=activeCells[Math.floor(activeCells.length*Math.random())];x=cell.x;y=cell.y;} ap.target.x=(map.cellSize/2+(map.cellSize*x))* -1;ap.target.y=(map.cellSize/2+(map.cellSize*y))* -1;},setByPercentRemain:function(game){var map=game.map,ap=game.autoPlay;game.weaponIndex=game.highWeaponIndex;if(map.percentRemain<ap.stopAtPercentRemain){ap.mode='move';}},modes:{move:function(game,secs){var ch=game.cross.crosshairs,os=game.cross.offset,ap=game.autoPlay,map=game.map,a=Math.atan2(os.y-ap.target.y,os.x-ap.target.x),cross=game.cross,d=utils.distance(os.x,os.y,ap.target.x,ap.target.y),delta=game.cross.radiusOuter-1;maxDelta=cross.radiusInner+cross.radiusDiff-1,minDelta=cross.radiusInner+5,slowDownDist=map.cellSize*4,minDist=map.cellSize/2,per=0;if(d<slowDownDist){per=1-d/slowDownDist;} ap.target.d=d;delta=maxDelta-(maxDelta-minDelta)*per;if(d<minDist){os.x=ap.target.x;os.y=ap.target.y;ap.shootTime=ap.maxShootTime;autoPlay.setRandomTarget(game);ap.mode='shoot';}else{ch.x=game.cross.center.x+Math.cos(a)*delta;ch.y=game.cross.center.y+Math.sin(a)*delta;}},shoot:function(game,secs){var ch=game.cross.crosshairs,os=game.cross.offset,ap=game.autoPlay,map=game.map;ch.x=game.cross.center.x;ch.y=game.cross.center.y;shoot(game);ap.shootTime-=secs;if(ap.shootTime<=0){ap.mode='move';autoPlay.setRandomTarget(game);}}},update:function(game,secs){if(game.autoPlay.enabled){var ch=game.cross.crosshairs,os=game.cross.offset,ap=game.autoPlay,map=game.map;game.autoPlay.delay-=secs;if(game.userDown){game.autoPlay.delay=game.autoPlay.maxDelay;} game.autoPlay.delay=game.autoPlay.delay<0?0:game.autoPlay.delay;if(game.autoPlay.delay===0){game.cross.moveBackEnabled=false;autoPlay.setByPercentRemain(game);autoPlay.modes[ap.mode](game,secs);}}}};var mapSizes=['8x6','16x8','16x16','32x16'].map(function(str){var a=str.split('x');return{w:a[0],h:a[1]};});var setMap=function(game,xp,deltaNext,levelCap,startingCellDamage){levelCap=levelCap||50;if(xp>=0||deltaNext){game.mapLevelObj=XP.parseByXP(xp,levelCap,deltaNext);} var mapL=game.mapLevelObj,capPer=mapL.level/levelCap;var size=mapSizes[Math.floor(capPer*(mapSizes.length-1))];game.map=mapMod.create({cellWidth:size.w,cellHeight:size.h,cellLevelCap:5+Math.floor(capPer*95),cellDeltaNext:1000-Math.round(capPer*750),genRate:10-9.5*capPer,genCount:1+Math.floor(6*capPer),blastRMin:2,blastRMax:2+Math.floor(size.w/6*capPer),blastCount:3+Math.round(17*capPer),blastMaxDamage:10+1000*capPer,startCells:[0],startingCellDamage:startingCellDamage});autoPlay.setRandomTarget(game);crossMod.center(game.cross,game.map.cellWidth,game.map.cellHeight);poolMod.setActiveStateForAll(game.shots,false);poolMod.setActiveStateForAll(game.explosions,false);};var setManaToLevel=function(game){var level=game.levelObj.level,mLv=game.mana.level;game.mana.mps=mLv.mpsStart+mLv.mpsPerLevel*level;game.mana.max=mLv.maxStart+mLv.maxPerLevel*level;};var resetSkills=function(game){Object.keys(game.skills).forEach(function(skillKey){var skill=game.skills[skillKey];skill.points=0;});game.skillPoints.free=game.skillPoints.total;setWeaponsToLevel(game);};var setFreeFromSkills=function(game){var total=0;Object.keys(game.skills).forEach(function(skillKey){var skill=game.skills[skillKey];total+=skill.points;});game.skillPoints.free=game.skillPoints.total-total;};var setSkillPointTotal=function(game){game.skillPoints.total=(game.levelObj.level-1)*5;setFreeFromSkills(game);};var saveStringVersions={v0:['damage'],v1:['damage','mapIndex','skillPoints']};var saveStringParts={damage:{encode:function(game){var damage=Math.floor(Number(game.totalDamage));return damage.toString(36);},apply:function(game,partString){var damage=parseInt(partString,36);if(damage>0){game.totalDamage=damage;console.log('applying damage: '+game.totalDamage);}}},mapIndex:{encode:function(game){return Number(game.mapLevelObj.level).toString(36);},apply:function(game,partString){var level=parseInt(partString,36);if(level>=1){game.mapXP=XP.parseByLevel(level,game.mapLevelCap,game.mapDeltaNext).xp;setMap(game,game.mapXP,game.mapDeltaNext,game.mapLevelCap,game.startingCellDamage);console.log('applying map level: '+level);}}},skillPoints:{encode:function(game){var str='';Object.keys(game.skills).forEach(function(skillKey){str+=game.skills[skillKey].points.toString(36)+'-';});return str;},apply:function(game,partString){resetSkills(game);if(partString){var match=partString.match(/\w+/g);if(match){console.log('applying skill point string:');console.log(partString);match.forEach(function(sp,i){game.skills['weapon_'+i].points=Number(parseInt(sp,36));});}} setFreeFromSkills(game);}},};api.createSaveString=function(game,ver){ver=ver||hardSet.saveStringVer;var str='';saveStringVersions[ver].forEach(function(partKey){str+=saveStringParts[partKey].encode(game)+'.';});return ver+'.'+str;};api.applySaveString=function(game,saveStr){var parts=saveStr.split('.').map(function(part){return part.replace(/\;/,'');});var ver=parts[0];saveStringVersions[ver].forEach(function(partKey,i){saveStringParts[partKey].apply(game,parts[1+i])});};api.WeaponsDefaults=WeaponsDefaults;api.setMap=setMap;api.create=function(opt){opt=opt||{};var game={levelObj:{},mapLevelObj:{},mapXP:opt.mapXP===undefined?0:opt.mapXP,mapDeltaNext:opt.mapDeltaNext||50,mapLevelCap:opt.mapLevelCap||50,startingCellDamage:opt.startingCellDamage||0,map:{},canvas:opt.canvas,skillPoints:{total:100,free:50},skills:{weapon_0:{points:0},weapon_1:{points:0},weapon_2:{points:0},weapon_3:{points:0}},mana:{current:50,max:100,mps:10,level:{mpsStart:9,mpsPerLevel:1,maxStart:90,maxPerLevel:10}},cross:{},shots:poolMod.create(shotOptions),explosions:poolMod.create(explosionOptions),shotRate:1,shotSecs:0,weaponIndex:0,highWeaponIndex:0,totalDamage:opt.totalDamage||0,userDown:false,autoPlay:{enabled:true,behavior:'total-kill',stopAtPercentRemain:0,delay:5,maxDelay:5,mode:'move',shootTime:5,maxShootTime:5,target:{x:-16,y:-16,d:0}}};game.weapons=utils.deepClone(WeaponsDefaults);game.levelObj=XP.parseByXP(game.totalDamage,hardSet.levelCap,hardSet.deltaNext);game.cross=crossMod.create();setMap(game,game.mapXP,game.mapDeltaNext,game.mapLevelCap,game.startingCellDamage);setWeaponsToLevel(game);resetSkills(game);setSkillPointTotal(game);if(opt.saveString){api.applySaveString(game,opt.saveString);} autoPlay.setRandomTarget(game);return game;};api.update=function(game,secs){secs=secs>hardSet.maxSecs?hardSet.maxSecs:secs;game.shotRate=game.weapons[game.weaponIndex].shotRate;crossMod.update(game.cross,secs);mapMod.clampOffset(game.map,game.cross.offset);mapMod.update(game.map,secs);poolMod.update(game.shots,game,secs);poolMod.update(game.explosions,game,secs);game.shotSecs+=secs;game.shotSecs=game.shotSecs>=game.shotRate?game.shotRate:game.shotSecs;if(crossMod.isInInner(game.cross)&&game.cross.userDown){shoot(game);} autoPlay.update(game,secs);game.levelObj=XP.parseByXP(game.totalDamage,hardSet.levelCap,hardSet.deltaNext);setWeaponsToLevel(game);setManaToLevel(game);game.mana.current+=game.mana.mps*secs;game.mana.current=game.mana.current>game.mana.max?game.mana.max:game.mana.current;setSkillPointTotal(game);var wi=game.weapons.length,w;while(wi--){w=game.weapons[wi];if(!w.locked){game.highWeaponIndex=wi;break;}}};var updateButtonDisplay=function(sm,button){var sp=sm.game.skills['weapon_'+button.data.weaponIndex].points,w=button.data.weapon;button.info=sp+' '+Math.floor(w.maxDPS);};var setSkill=function(sm,skillKey,spValue){var skill=sm.game.skills[skillKey],skillPoints=sm.game.skillPoints,delta=spValue-skill.points;if(skillPoints.free-delta>=0&&skill.points+delta>=0){skillPoints.free-=delta;skill.points+=delta;}};api.createSkillButtons=function(sm){var buttons={toOptions:buttonMod.create({label:'Options',x:25,y:200,r:10,onClick:function(button,sm){sm.currentState='options';}}),resetSkills:buttonMod.create({label:'Reset',x:75,y:200,r:10,onClick:function(button,sm){resetSkills(sm.game);sm.game.weapons.forEach(function(weapon,weaponIndex){var button=buttons['weapon_'+weaponIndex];updateButtonDisplay(sm,button);});}})};sm.game.weapons.forEach(function(weapon,weaponIndex){var button=buttonMod.create({label:weapon.name,type:'upgrade',x:50+60*weaponIndex,y:120,r:25,data:{weaponIndex:weaponIndex,weapon:weapon},onUpgrade:function(button,sm){var wi=button.data.weaponIndex,skillKey='weapon_'+wi,skill=sm.game.skills[skillKey];setSkill(sm,skillKey,skill.points+1);},onDowngrade:function(button,sm){var wi=button.data.weaponIndex,skillKey='weapon_'+wi,skill=sm.game.skills[skillKey];setSkill(sm,skillKey,skill.points-1);},onClick:function(button,sm){updateButtonDisplay(sm,button);}});buttons['weapon_'+weaponIndex]=button;updateButtonDisplay(sm,button);});return buttons;};return api;} ());var genSheets=(function(){var createSheet=function(cellSize,cw,ch){var sheet={},canvas=document.createElement('canvas'),ctx=canvas.getContext('2d');canvas.width=cellSize*cw;canvas.height=cellSize*ch;ctx.translate(0.5,0.5);sheet.canvas=canvas;sheet.ctx=ctx;sheet.cellWidth=cw;sheet.cellHeight=ch;sheet.cellSize=cellSize;return sheet;};var drawBasicBox=function(sheet,fill,stroke){var canvas=sheet.canvas,ctx=sheet.ctx;ctx.fillStyle=fill||'#008800';ctx.fillRect(-1,-1,canvas.width+1,canvas.height+1);ctx.strokeStyle=stroke||'lime';var i=0,s;while(i<sheet.cellWidth){ctx.save();ctx.translate(16+32*i,16);s=28-14*(i/sheet.cellWidth);ctx.beginPath();ctx.rect(-14,-14,s,s);ctx.stroke();ctx.restore();i+=1;}};var sheets=[];['#005500','#000088','#880000'].forEach(function(fill){var sheet=createSheet(32,10,1),canvas=sheet.canvas,ctx=sheet.ctx;drawBasicBox(sheet,fill,'#000000');sheets.push(sheet);});return{sheets:sheets};} ());var draw=(function(){var hpColors=['red','orange','lime'];var getHpColor=function(per){return hpColors[Math.floor((hpColors.length-0.01)*per)];};var drawBar=function(ctx,game,per,rStart,rLength,fill){var cross=game.cross,center=cross.center;ctx.lineWidth=3;ctx.strokeStyle='gray';ctx.beginPath();ctx.arc(center.x,center.y,cross.radiusInner+5,rStart,rStart+rLength);ctx.stroke();ctx.strokeStyle=fill||'lime';ctx.beginPath();ctx.arc(center.x,center.y,cross.radiusInner+5,rStart,rStart+rLength*per);ctx.stroke();};var drawCrossCircles=function(ctx,cross){ctx.strokeStyle='rgba(255,255,255,0.4)';ctx.fillStyle='rgba(255,0,0,0.4)';ctx.lineWidth=1;ctx.beginPath();ctx.arc(cross.center.x,cross.center.y,cross.radiusInner,0,Math.PI*2);ctx.stroke();ctx.fill();ctx.fillStyle='rgba(0,0,0,0.2)';ctx.beginPath();ctx.arc(cross.center.x,cross.center.y,cross.radiusOuter,0,Math.PI*2);ctx.stroke();ctx.fill();ctx.beginPath();ctx.arc(cross.crosshairs.x,cross.crosshairs.y,cross.crosshairs.radius,0,Math.PI*2);ctx.stroke();};var drawCrossHairs=function(ctx,cross){var ch=cross.crosshairs;ctx.strokeStyle='rgba(200,0,0,0.5)';ctx.lineWidth=2;ctx.beginPath();ctx.moveTo(ch.x,ch.y-ch.radius*1.5);ctx.lineTo(ch.x,ch.y+ch.radius*1.5);ctx.stroke();ctx.beginPath();ctx.moveTo(ch.x-ch.radius*1.5,ch.y);ctx.lineTo(ch.x+ch.radius*1.5,ch.y);ctx.stroke();};var drawPercentRemainBar=function(ctx,game){var cross=game.cross,center=cross.center,map=game.map;drawBar(ctx,game,map.percentRemain,Math.PI,Math.PI/2,getHpColor(map.percentRemain));};var drawAutoPlayDelayBar=function(ctx,game){var ap=game.autoPlay;drawBar(ctx,game,ap.delay/ap.maxDelay,0,Math.PI/4,'cyan');};var drawWeaponInfo=function(ctx,game){var center=game.cross.center;var w=game.weapons[game.weaponIndex];ctx.fillStyle='#ff6060';ctx.font='10px courier';ctx.textAlign='center';ctx.fillText('Weapon: '+w.name,center.x,center.y+75);ctx.fillText('maxDPS: '+Number(w.maxDPS).toFixed(2),center.x,center.y+85);};var drawCellHealthBar=function(ctx,map,cell,cross){var x=cell.x*map.cellSize+cross.offset.x+(320/2),y=cell.y*map.cellSize+cross.offset.y+(240/2);ctx.fillStyle=getHpColor(cell.HP/cell.maxHP);ctx.globalAlpha=0.5;ctx.fillRect(x,y,map.cellSize*(cell.HP/cell.maxHP),5);ctx.globalAlpha=1;};var setupDebug=function(ctx,game){ctx.fillStyle='rgba(0,0,0,0.4)';ctx.textBaseline='top';ctx.textAlign='left';ctx.fillRect(0,0,game.canvas.width,game.canvas.height);ctx.fillStyle='yellow';ctx.textBaseline='top';ctx.font='10px courier';};var cellLevel=function(ctx,cell,x,y){if(cell.active){ctx.fillStyle='rgba(255,255,255,0.5)';ctx.font='7px courier';ctx.fillText('L'+Math.floor(cell.levelObj.level),x+3,y+3);}};var debugModes={none:function(sm){},general:function(sm){var ctx=sm.ctx,canvas=sm.canvas,game=sm.game;setupDebug(ctx,sm.game);ctx.fillText('pos: '+game.cross.offset.x.toFixed(2)+','+game.cross.offset.y.toFixed(2),10,10);ctx.fillText('percent remain: '+Number(game.map.percentRemain*100).toFixed(2),10,20);ctx.fillText('weapon: '+sm.game.weapons[game.weaponIndex].name,10,30);ctx.fillText('damage: '+Math.floor(game.totalDamage),10,40);ctx.fillText('high damage cell: '+Math.floor(game.map.highDamageCell),10,50);},weapon:function(sm){var ctx=sm.ctx;setupDebug(ctx,sm.game);var w=sm.game.weapons[sm.game.weaponIndex];ctx.fillText('Current weapon: ',10,10);ctx.fillText('name: '+w.name,10,20);ctx.fillText('maxDPS: '+w.maxDPS,10,30);ctx.fillText('accuracy: '+Number(w.accuracy).toFixed(2),10,40);ctx.fillText('locked: '+w.locked,10,50);ctx.fillText('unLockAt: '+w.unLockAt,10,60);},level:function(sm){var ctx=sm.ctx,lv=sm.game.levelObj;setupDebug(ctx,sm.game);ctx.fillText('Current level: '+lv.level,10,10);ctx.fillText('xp: '+lv.xp,10,20);ctx.fillText('forNext level: '+lv.forNext,10,30);ctx.fillText('toNext level: '+lv.toNext,10,40);ctx.fillText('per: '+lv.per.toFixed(2),10,50);ctx.fillText('forLast: '+lv.forLast,10,60);},map:function(sm){var ctx=sm.ctx,game=sm.game,map=game.map;setupDebug(ctx,game);ctx.fillText('map level: '+game.mapLevelObj.level,10,10);ctx.fillText('map size: '+map.cellWidth+'x'+map.cellHeight,10,20);ctx.fillText('cellLevelCap: '+map.cellLevel.cap,10,30);ctx.fillText('cellDeltaNext: '+map.cellLevel.deltaNext,10,40);ctx.fillText('gen rate (count): '+map.gen.rate+' ('+map.gen.count+')',10,50);ctx.fillText('map.percentRemain: '+map.percentRemain.toFixed(2),10,100);}};var cellTypeColors=['green','blue','red'],sheets=genSheets.sheets;return{back:function(ctx,canvas){ctx.fillStyle='black';ctx.fillRect(0,0,canvas.width,canvas.height);},cross:function(ctx,game){drawCrossCircles(ctx,game.cross);drawPercentRemainBar(ctx,game);drawAutoPlayDelayBar(ctx,game);drawBar(ctx,game,game.levelObj.per,Math.PI*1.69,Math.PI*0.3,'blue');drawBar(ctx,game,game.shotSecs/game.shotRate,Math.PI*0.33,Math.PI*0.15,'red');drawBar(ctx,game,game.mana.current/game.mana.max,Math.PI*0.5,Math.PI*0.15,'purple');drawWeaponInfo(ctx,game);var cross=game.cross,map=game.map,ch=game.cross.crosshairs,cell=mapMod.getWithCanvasPointAndOffset(game.map,ch.x,ch.y,cross.offset.x,cross.offset.y),x=cross.center.x+cross.radiusOuter-45,y=cross.center.y;ctx.fillStyle='white';ctx.textBaseline='top';ctx.textAlign='left';ctx.font='8px arial';ctx.fillText('level: '+game.levelObj.level+' ('+Math.round(game.levelObj.per*100)+'%)',x,y-50);ctx.fillText('xp: '+Math.floor(game.levelObj.xp),x,y-40);ctx.fillText('next: '+Math.floor(game.levelObj.toNext),x,y-30);ctx.fillText('mana: '+Math.floor(game.mana.current)+'/'+Math.floor(game.mana.max)+' ('+game.mana.mps+'/s)',x,y-20);if(cell){ctx.fillText('pos: '+cell.i+' ('+cell.x+','+cell.y+')',x,y);ctx.fillText('lv:'+cell.levelObj.level+' ('+Math.round(cell.levelObj.per*100)+'%)',x,y+10);ctx.fillText('hp:'+Math.floor(cell.HP)+'/'+Math.floor(cell.maxHP),x,y+20);ctx.fillText('dam: '+Math.floor(cell.damage)+' ('+Math.round(cell.damagePer*100)+'%)',x,y+30);ctx.strokeStyle='rgba(255,255,255,0.4)';ctx.lineWidth=3;ctx.strokeRect(cell.x*map.cellSize+cross.offset.x+(320/2),cell.y*map.cellSize+cross.offset.y+(240/2),map.cellSize,map.cellSize);} drawCrossHairs(ctx,game.cross);},map:function(ctx,map,cross){ctx.strokeStyle='grey';ctx.lineWidth=3;map.cells.forEach(function(cell){var x=cell.x*map.cellSize+cross.offset.x+(320/2),y=cell.y*map.cellSize+cross.offset.y+(240/2),per=cell.HP/cell.maxHP;if(cell.active){ctx.drawImage(sheets[cell.typeIndex].canvas,32*Math.floor(9-cell.HP/cell.maxHP*9),0,32,32,x,y,map.cellSize,map.cellSize);if(per<1){drawCellHealthBar(ctx,map,cell,cross);}}else{ctx.lineWidth=1;var c=50+Math.round(200*cell.damagePer);ctx.strokeStyle='rgba(0,128,128, 0.4)';ctx.fillStyle='rgba(0,'+c+','+c+', 0.7)';ctx.beginPath();ctx.rect(x,y,map.cellSize,map.cellSize);ctx.fill();ctx.stroke();} cellLevel(ctx,cell,x,y);});},shots:function(ctx,game){var shots=game.shots,offset=game.cross.offset,x,y,i=shots.length,shot;while(i--){shot=shots[i];ctx.fillStyle='white';ctx.strokeStyle='black';if(shot.active){ctx.beginPath();x=shot.x+offset.x+(320/2);y=shot.y+offset.y+(240/2);ctx.arc(x,y,shot.radius,0,Math.PI*2);ctx.fill();ctx.stroke();}}},explosions:function(ctx,game){var exps=game.explosions,offset=game.cross.offset,i=exps.length,x,y,alpha=0.5,ex;while(i--){ex=exps[i];alpha=1-ex.per;ctx.fillStyle='rgba(255,255,0,'+alpha+')';ctx.strokeStyle='rgba(0,0,0,'+alpha+')';if(ex.active){ctx.beginPath();x=ex.x+offset.x+(320/2);y=ex.y+offset.y+(240/2);ctx.arc(x,y,ex.radius,0,Math.PI*2);ctx.fill();ctx.stroke();}}},buttons:function(ctx,buttons){Object.keys(buttons).forEach(function(key){var b=buttons[key];ctx.fillStyle='red';if(b.type==='toggle'&&b.bool){ctx.fillStyle='lime';} ctx.strokeStyle='gray';ctx.lineWidth=1;ctx.beginPath();ctx.arc(b.x,b.y,b.r,0,Math.PI*2);ctx.fill();ctx.stroke();ctx.textBaseline='middle';ctx.textAlign='center';ctx.fillStyle='white';ctx.font=(b.fontSize||10)+'px arial';if(b.type==='options'){var str=b.options[b.currentOption||0];ctx.fillText(str,b.x,b.y);} if(b.type==='basic'){ctx.fillText(b.label,b.x,b.y);} if(b.type==='toggle'){ctx.fillText(b.label,b.x,b.y);} if(b.type==='upgrade'){ctx.fillText(b.label,b.x,b.y);ctx.font='8px courier';ctx.fillText(b.info,b.x,b.y+10);}});},mapInfo:function(ctx,game){var map=game.map,mapLevelObj=game.mapLevelObj;ctx.textAlign='center';ctx.fillText('mapLevel : '+mapLevelObj.level,160,80);ctx.fillText('size : '+map.cellWidth+' x '+map.cellHeight,160,90);ctx.fillText('Max Cell Level : '+map.cellLevel.cap,160,100);ctx.fillText('Level Up Rate : '+map.cellLevel.deltaNext,160,110);ctx.fillText('Cell Gen Rate : '+map.gen.rate.toFixed(2),160,120);ctx.fillText('Cell Gen Count : '+map.gen.count,160,130);},debug:function(sm){debugModes[sm.debugMode](sm,sm.ctx,sm.canvas);},skillPointInfo:function(ctx,sm){var skillPoints=sm.game.skillPoints;ctx.fillStyle='white';ctx.textAlign='left';ctx.fillText('skillPoints: '+skillPoints.free+'/'+skillPoints.total,10,10);},ver:function(ctx,sm){ctx.fillStyle='#dfdfdf';ctx.textAlign='left';ctx.fillText('v'+sm.ver,10,sm.canvas.height-15);}}} ());(function(){var canvas=document.createElement('canvas'),ctx=canvas.getContext('2d'),container=document.getElementById('canvas-app')||document.body;container.appendChild(canvas);canvas.width=320;canvas.height=240;ctx.translate(0.5,0.5);var saveStateString=function(sm){localStorage.setItem('game-crosshairs-save-0',gameMod.createSaveString(sm.game));};var loadStateString=function(){return localStorage.getItem('game-crosshairs-save-0')};var getCanvasRelative=function(e){var canvas=e.target,bx=canvas.getBoundingClientRect();return{x:(e.changedTouches?e.changedTouches[0].clientX:e.clientX)-bx.left,y:(e.changedTouches?e.changedTouches[0].clientY:e.clientY)-bx.top,bx:bx};};var states={init:{update:function(sm,secs){sm.game=gameMod.create({canvas:canvas,totalDamage:0,startingCellDamage:0,mapXP:0,mapDeltaNext:50,mapLevelCap:20,saveString:loadStateString()});states.skillManager.buttons=gameMod.createSkillButtons(sm);sm.currentState='game';},pointerStart:function(sm,e){var state=states[sm.currentState],buttons=state.buttons,pos=getCanvasRelative(e);buttonMod.pointerCheckCollection(state.buttons,pos,sm);},pointerMove:function(){},pointerEnd:function(){}},options:{buttons:{toGame:buttonMod.create({label:'game',x:25,y:200,r:10,onClick:function(button,sm){sm.currentState='game';}}),toSkillsManager:buttonMod.create({label:'Skills',x:100,y:120,r:16,onClick:function(button,sm){sm.currentState='skillManager';}}),toMap:buttonMod.create({label:'Map',x:100+40,y:120,r:16,onClick:function(button,sm){sm.currentState='map';}}),debugMode:buttonMod.create({x:100+80,y:120,r:16,type:'options',options:['none','general','weapon','level','map'],onClick:function(button,sm){sm.debugMode=button.options[button.currentOption];}})},update:function(sm,secs){var state=states[sm.currentState];draw.back(ctx,canvas);draw.buttons(ctx,state.buttons);draw.ver(ctx,sm);draw.debug(sm);},pointerStart:function(sm,e){var state=states[sm.currentState],buttons=state.buttons,pos=getCanvasRelative(e);buttonMod.pointerCheckCollection(state.buttons,pos,sm);},pointerMove:function(){},pointerEnd:function(){}},game:{buttons:{options:buttonMod.create({label:'options',fontSize:10,x:25,y:200,r:10,onClick:function(button,sm){sm.currentState='options';}}),changeWeapon:buttonMod.create({label:'Next Weapon',fontSize:8,x:280,y:210,r:16,onClick:function(button,sm){sm.game.weaponIndex+=1;sm.game.weaponIndex%=sm.game.highWeaponIndex+1;}}),autoPlay:buttonMod.create({label:'Auto Play',type:'toggle',fontSize:8,x:25,y:175,r:10,bool:true,onClick:function(button,sm){var ap=sm.game.autoPlay;ap.delay=ap.maxDelay;},onActive:function(button,sm){sm.game.autoPlay.enabled=button.bool;},onInactive:function(button,sm){sm.game.autoPlay.enabled=button.bool;}})},update:function(sm,secs){var state=states[sm.currentState];gameMod.update(sm.game,secs);saveStateString(sm);draw.back(ctx,canvas);draw.map(ctx,sm.game.map,sm.game.cross);draw.explosions(ctx,sm.game);draw.cross(ctx,sm.game);draw.shots(ctx,sm.game);draw.buttons(ctx,state.buttons);draw.ver(ctx,sm);draw.debug(sm);},pointerStart:function(sm,e){var state=states[sm.currentState],buttons=state.buttons,pos=getCanvasRelative(e);sm.game.cross.moveBackEnabled=true;crossMod.userAction(sm.game.cross,'start',pos);sm.game.userDown=true;buttonMod.pointerCheckCollection(state.buttons,pos,sm);},pointerEnd:function(em,e){var pos=getCanvasRelative(e);crossMod.userAction(sm.game.cross,'end',pos);sm.game.userDown=false;},pointerMove:function(sm,e){var pos=getCanvasRelative(e);crossMod.userAction(sm.game.cross,'move',pos);}},skillManager:{buttons:{},update:function(sm,secs){var state=states[sm.currentState];draw.back(ctx,canvas);gameMod.update(sm.game,0);draw.buttons(ctx,state.buttons);draw.skillPointInfo(ctx,sm);draw.ver(ctx,sm);draw.debug(sm);},pointerStart:function(sm,e){var state=states[sm.currentState],buttons=state.buttons,pos=getCanvasRelative(e);buttonMod.pointerCheckCollection(state.buttons,pos,sm);saveStateString(sm);},pointerEnd:function(em,e){},pointerMove:function(sm,e){}},map:{buttons:{toOptions:buttonMod.create({label:'Options',x:25,y:200,r:10,onClick:function(button,sm){sm.currentState='options';}}),levelUp:buttonMod.create({label:'Level +',x:160-30,y:180,r:20,onClick:function(button,sm){var level=sm.game.mapLevelObj.level;level+=1;sm.game.mapXP=XP.parseByLevel(level,sm.game.mapLevelCap,sm.game.mapDeltaNext).xp;gameMod.setMap(sm.game,sm.game.mapXP,sm.game.mapDeltaNext,sm.game.mapLevelCap);}}),levelDown:buttonMod.create({label:'Level -',x:160+30,y:180,r:20,onClick:function(button,sm){var level=sm.game.mapLevelObj.level;level-=1;sm.game.mapXP=XP.parseByLevel(level,sm.game.mapLevelCap,sm.game.mapDeltaNext).xp;gameMod.setMap(sm.game,sm.game.mapXP,sm.game.mapDeltaNext,sm.game.mapLevelCap);}})},update:function(sm,secs){var state=states[sm.currentState];draw.back(ctx,canvas);draw.buttons(ctx,state.buttons);draw.mapInfo(ctx,sm.game);draw.ver(ctx,sm);draw.debug(sm);},pointerStart:function(sm,e){var state=states[sm.currentState],buttons=state.buttons,pos=getCanvasRelative(e);buttonMod.pointerCheckCollection(state.buttons,pos,sm);},pointerEnd:function(em,e){},pointerMove:function(sm,e){}}};var sm={ver:'0.21.0',canvas:canvas,ctx:ctx,debugMode:'none',currentState:'init',game:{},input:{pointerDown:false,pos:{x:0,y:0}}};var pointerHanders={start:function(sm,e){var pos=sm.input.pos;sm.input.pointerDown=true;states[sm.currentState].pointerStart(sm,e);},move:function(sm,e){states[sm.currentState].pointerMove(sm,e);},end:function(sm,e){sm.input.pointerDown=false;states[sm.currentState].pointerEnd(sm,e);}};var createPointerHandler=function(sm,type){return function(e){sm.input.pos=getCanvasRelative(e);e.preventDefault();pointerHanders[type](sm,e);};};canvas.addEventListener('mousedown',createPointerHandler(sm,'start'));canvas.addEventListener('mousemove',createPointerHandler(sm,'move'));canvas.addEventListener('mouseup',createPointerHandler(sm,'end'));canvas.addEventListener('touchstart',createPointerHandler(sm,'start'));canvas.addEventListener('touchmove',createPointerHandler(sm,'move'));canvas.addEventListener('touchend',createPointerHandler(sm,'end'));var lt=new Date(),FPS_target=30;var loop=function(){var now=new Date(),t=now-lt,secs=t/1000;requestAnimationFrame(loop);if(t>=1000/FPS_target){states[sm.currentState].update(sm,secs);lt=now;}};loop();} ());}());